{"version":3,"sources":["Pages/Nodes/NodeCard/NodeCard.module.scss","constans/enums.ts","Providers/DashboardPageNavigationProvider.tsx","hooks/useDashboardPageNavigation.ts","components/SideMenu/MenuSections/GeneralSection.tsx","Providers/PinnedAppsContext.tsx","hooks/usePinnedApps.ts","components/Text/Text.tsx","components/Thumbnail/Thumbnail.tsx","components/SideMenu/MenuSections/PinnedSection.tsx","components/SideMenu/MenuSections/LoggedInUserSection.tsx","components/SideMenu/SideMenu.tsx","serverApiMocks.ts","services/DashboardServerApi/DashboardServerApi.ts","Providers/ServerApiContext.tsx","components/Portal/Portal.tsx","Pages/Dashboard/DashboardTile/DashboardTile.tsx","Pages/Dashboard/AppLoader.tsx","components/PageTitle/PageTitle.tsx","components/Skeleton/DashboardTile.tsx","Pages/Dashboard/Dashboard.tsx","hooks/useServerApiContext.ts","Providers/AnimationsContextProvider.ts","hooks/useFetch.ts","utils/CamelCaseConverter.ts","components/Loader/Loader.tsx","components/PageTitle/PageTitleAction.tsx","Pages/Nodes/NodeSettings/NodeSettings.tsx","Pages/Nodes/NodeCardAnimations/OpenNodeSettingsAnimation.tsx","hooks/useAnimationsUtils.ts","components/SkeletonShimmer/SkeletonShimmer.tsx","serviceWorker.js","Pages/Nodes/NodeCard/NodeCardTypography.tsx","Pages/Nodes/NodeCard/NodeCardSummary.tsx","Pages/Nodes/NodeCard/NodeCard.tsx","Pages/Applications/ViewButton/ViewButton.tsx","Pages/Nodes/NodesPage.tsx","Providers/FocusedAppContextProvider.tsx","hooks/useFocusedApplication.ts","components/PinnApp/PinnApp.tsx","Pages/Applications/ApplicationTile.tsx","hooks/useApplicationDND.ts","Pages/Applications/RearrangeButton/RearrangeButton.tsx","Pages/Applications/Applications.tsx","components/FocusedApp/FocusedAppActions.tsx","components/FocusedApp/FocusedApp.tsx","components/App/App.tsx","index.tsx","components/AppWithProviders/AppWithProviders.tsx","Pages/Applications/RearrangeButton/RearrangeButton.module.scss","components/PageTitle/PageTitle.module.scss","Pages/Applications/ViewButton/ViewButton.module.scss","Pages/Dashboard/DashboardTile/DashboardTile.module.scss","Pages/Nodes/NodeCardAnimations/Animations.module.scss","components/App/App.module.scss","Pages/Nodes/NodeSettings/NodeSettings.module.scss","components/FocusedApp/FocusedApp.module.scss","components/Thumbnail/Thumbnail.module.scss","Pages/Nodes/NodePage.module.scss","components/PinnApp/PinnApp.module.scss","Pages/Dashboard/Dashboard.module.scss","components/Loader/Loader.module.scss","components/SideMenu/SideMenu.module.scss","Pages/Applications/Applications.module.scss","assets/img/react_logo.svg"],"names":["module","exports","DashboardPages","FILTERED_VIEW_TYPE","DashboardPageNavigation","createContext","currentDashboardPage","APPLICATION_PAGE","selectDashboardPage","DashboardPageNavigationProvider","children","useState","setCurrentDashboardPage","Provider","value","useDashboardPageNavigation","useContext","GeneralSection","className","css","generalSectionWrapper","sideMenuTitle","pageName","DASHBOARD_PAGE","icon","faLaptopCode","size","sideMenuItemIcon","menuItemText","faGripHorizontal","SETTINGS_PAGE","faProjectDiagram","HELP_PAGE","faHeadset","SideMenuItem","onClick","classNames","sideMenuItem","selected","PinnedAppsContext","pinnedAppsList","pinnApp","getPinnedApp","name","uuid","removeApp","PinnedAppsContextProvider","setPinnedListApps","find","pinnedApp","appDetails","uuidToRemove","filter","usePinnedAppsContext","Text","fontSize","color","weight","width","skeletonColor","showSkeleton","commonStyle","fontFamily","fontWeight","skeletonStyles","backgroundColor","content","style","Thumbnail","inDndState","classes","smallWrapper","normalWrapper","classNamesHelper","withDndStyles","thumbnailText","charAt","toUpperCase","PinnedSection","pinnedSectionWrapper","length","pinnedEmptyState","explanation","map","key","PinnedAppItem","pinnedAppText","removePinnedAppIcon","faTimesCircle","LoggedInUserSection","loggedInUserSectionWrapper","userThumbnail","userName","userNameCollapsed","userActions","SideMenu","withSizes","isMinimizedByViewPort","isMinimizedView","doMinimize","isMinimized","minimizedView","sideMenuWrapper","footerSection","signoutButton","faSignOutAlt","minimizeSideMenuIcon","disabled","faAngleDoubleLeft","faAngleLeft","thumbnail","require","DashboardServerApi","makeSenseApi","window","MkSAPIBuilder","GetInstance","getApplicationThumbnail","console","log","Promise","resolve","getNodeDetails","GetNodeInfo","response","_error","payload","data","getNodeSettings","all","getNodeHtmlSettings","getNodeScriptsSettings","then","nodeSettingsFiles","html","scripts","getAppData","getAppHtml","getAppScripts","GetFileContent","ui_type","file_name","file_type","getNodeList","reject","Webface","GetUserNodeList","nodes","error","this","ConnectGateway","Gateway","OnGatewayDataArrivedCallback","OnGatewayAdminCallback","ServerApiContext","dashboardServerApi","DashboardContext","ownState","Portal","context","state","iframeRoot","React","createIframeContent","hexxStream","hexString","toString","parstedString","i","substr","String","fromCharCode","parseInt","current","htmlString","decodeDomProperty","props","script","iframeWrapper","ReactDOM","findDOMNode","contentDocument","open","write","close","title","display","height","frameBorder","ref","contextType","initialDashboardTileState","isMkAppOpen","DashboardTile","renderThumbnail","description","dashboardThumbnailWrapper","textThumbnailLarge","textThumbnail","openMKAppMainView","a","htmlStream","scriptStream","setState","closeMKAppMainView","last6chars","substring","onDoubleClick","dashboardWrapper","smartHome","dashboardTitle","dashboardContent","closeOnEsc","modal","mkAppModalWrapper","onClose","innitialState","appThumbnail","mkAppLoadedData","appProps","AppLoader","mkAppInitData","nodeDetails","render","PageTitle","actions","theme","pageTitle","thin","pageTitleName","currentAppActions","Children","child","DashboardTileSkeleton","innitialDashboardsPageState","appList","DashboardsPage","underConstruction","pageContentWrapper","mkApp","index","loadedProps","marginTop","textAlign","zIndex","background","position","boxShadow","useServerApiContext","AnimationsContext","nodePageRef","useFetch","fetcherFunction","setData","isLoading","setIsLoading","useEffect","Error","fetchData","toCamelCase","obj","Object","keys","reduce","acc","currnet","camelCase","Loader","loading","spinner","PageTitleAction","doAction","text","actionActive","actionItem","active","iconWrapper","actionItemText","NodeSettings","deviceUuid","nodeName","fetcherFucntion","useCallback","nodeSettingsData","nodeSettingsWrapper","nodeSettingsTitle","faTimes","nodeSettingsContent","OpenNodeSettingsAnimation","isOpened","nodeCardRef","calcDistanceFromParentTop","nodePageTop","getClientRects","top","refTop","useAnimationsUtils","translateY","transform","transitionClassNames","enter","enterDone","exit","exitActive","exitDone","timeout","in","animationBaseState","cardSettingsOpenned","cardSettingsClosed","config","SkeletonShimmer","shimmerAnimations","keyframes","Shimmer","styled","div","Subtitle","CardText","NodeCardSummary","onNodeSettingsClick","type","isOnline","online","nodeCardSummaryWrapper","customClassName","deviceType","deviceName","deviceStatus","CardIconSection","section","IconSectionBackground","faCodeBranch","SummaryOptionsMenu","deviceContentWrapper","deviceSettingsMenu","deviceSettingsMenuIcon","faBars","CardSection","NodeCard","cardSettingOpenned","setCardSettingsOpenned","openCardSettings","cardWrapper","hovered","expandTicker","ChangeViewModes","setFilter","isActionMenuOpen","setIsActionMenuOpen","faSortAmountDown","afaSortAmountDown","selectedView","ActionMenu","useRef","useLayoutEffect","document","addEventListener","handleClick","removeEventListener","e","contains","target","appear","actionMenu","actionMenuItem","ALL","AVAILABLE","VIEW_FILTER_FUCNTIONS","nodeList","node","NodesPage","pageRef","machinesOnly","setMachinesOnly","pageTitleCustomWrapper","filterMachinesOnly","nodeCardWrapper","FocusedApplicationContext","focusedAppStreams","currentAppName","setCurrentFocusedApp","_st","removeFromFocus","currentAppId","FocusedAppContextProvider","setCurrentAppName","setCurrentAppId","setAppSteamDetails","useFocusedApplication","PinnApp","doPinnApp","isPinned","externalstyles","pinnAppWrapper","pinnedIcon","pinned","faThumbtack","ApplicationTile","id","moveAppTile","inDNDState","doDrag","dropIndex","canDrag","useDrop","accept","DRAG_DROP_TYPE","hover","item","monitor","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","clientOffset","getClientOffset","hoverMiddleX","left","right","hoverClientX","x","drop","useDrag","collect","isDragging","collectedProps","dragFunc","dropFunc","useApplicationDND","applicationTileClasses","applicationTile","dragging","appIsLoading","notAvailable","openApp","FOCUSED_APP","dndPlaceHolder","flipId","applicationTileWrapper","opacity","thumbnailWrapper","appName","onOpenAppClick","apploader","notAvailablePlaceholder","OpenApplication","openAppInner","openAppText","OptionsMenu","isAppPinned","optionsMenu","optionsMenuDnd","optionsItem","RearrangeAppTiles","doRearrangeClick","doSaveClick","doCancelClick","inDndStateTransitionExitDone","rearrangeButtonWrapper","rearrangeButtonWrapperInnter","faArrowsAltV","mountOnEnter","unmountOnExit","saveCancelAppsOrderEnterDone","saveCancelAppsOrder","saveDNDState","faCheck","saveIcon","cancelDNDState","cancelIcon","ApplicationsPage","orderedNodeList","setOrderedNodeList","previousOrderedNodeList","setPreviousOrderedNodeList","setDNDState","dragAppTile","update","$splice","flipKey","JSON","stringify","s","nodeProps","FocusedAppActions","pinnAppIcon","FocusedApp","currentAppThumbnail","App","isMinimizedSideMenu","setIsMinimizedSideMenu","isMounted","setIsMounted","currentPageToRender","setCurrentPageToRender","timeoutId","setTimeout","clearTimeout","siteContent","pageRightWrapper","pageBasePlaceholder","slideInAnimation","slideOutAnimation","pageWrapper","getPage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","BrowserRouter","backend","HTML5Backend","getElementById","URL","process","href","origin","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.301da252.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWrapper\":\"NodeCard_cardWrapper__2ddlI\",\"hovered\":\"NodeCard_hovered__1jtNt\",\"expandTicker\":\"NodeCard_expandTicker__1zDWR\",\"disabled\":\"NodeCard_disabled__2yCvS\",\"nodeCardSummaryWrapper\":\"NodeCard_nodeCardSummaryWrapper__15sgR\",\"section\":\"NodeCard_section__HEMnl\",\"IconSectionBackground\":\"NodeCard_IconSectionBackground__3IuOJ\",\"deviceContentWrapper\":\"NodeCard_deviceContentWrapper__3DSVD\",\"deviceType\":\"NodeCard_deviceType__3wEJ2\",\"deviceName\":\"NodeCard_deviceName__3DQUy\",\"deviceSettingsMenu\":\"NodeCard_deviceSettingsMenu__2i2aM\",\"deviceSettingsMenuIcon\":\"NodeCard_deviceSettingsMenuIcon__j0C9G\",\"deviceStatus\":\"NodeCard_deviceStatus__3gJQr\",\"nodeSettingPageWrapper\":\"NodeCard_nodeSettingPageWrapper__3YKlW\",\"placeHolderWidth\":\"NodeCard_placeHolderWidth__2Qn9R\",\"nodeSettingPage\":\"NodeCard_nodeSettingPage__1T-zn\",\"modalWrapper\":\"NodeCard_modalWrapper__1hWYo\"};","export enum DashboardPages {\n  APPLICATION_PAGE = \"APPLICATION_PAGE\",\n  DASHBOARD_PAGE = \"DASHBOARD_PAGE\",\n  SETTINGS_PAGE = \"SETTINGS_PAGE\",\n  HELP_PAGE = \"HELP_PAGE\",\n  FOCUSED_APP = \"\"\n}\n\nexport enum FILTERED_VIEW_TYPE {\n  ALL = \"ALL\",\n  AVAILABLE = \"AVAILABLE\"\n}\n","import React, {createContext, useState, Dispatch, SetStateAction} from \"react\";\nimport {DashboardPages} from \"../constans/enums\";\n\nexport const DashboardPageNavigation = createContext({\n  currentDashboardPage: DashboardPages.APPLICATION_PAGE,\n  selectDashboardPage: (() => {}) as Dispatch<SetStateAction<DashboardPages>>\n});\n\nexport const DashboardPageNavigationProvider: React.FC = ({children}) => {\n  const [currentDashboardPage, setCurrentDashboardPage] = useState(\n    DashboardPages.APPLICATION_PAGE\n  );\n\n  return (\n    <DashboardPageNavigation.Provider\n      value={{\n        currentDashboardPage,\n        selectDashboardPage: setCurrentDashboardPage\n      }}\n    >\n      {children}\n    </DashboardPageNavigation.Provider>\n  );\n};\n","import {useContext} from \"react\";\nimport {DashboardPageNavigation} from \"../Providers/DashboardPageNavigationProvider\";\n\nexport const useDashboardPageNavigation = () =>\n  useContext(DashboardPageNavigation);\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport classNames from \"classnames\";\nimport {DashboardPages} from \"../../../constans/enums\";\nimport {useDashboardPageNavigation} from \"../../../hooks/useDashboardPageNavigation\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faGripHorizontal,\n  faLaptopCode,\n  faProjectDiagram,\n  faHeadset\n} from \"@fortawesome/free-solid-svg-icons\";\ninterface SideMenuItem {\n  pageName: DashboardPages;\n  children: React.ReactNode[];\n}\n\nexport const GeneralSection: React.FC = () => (\n  <section className={css.generalSectionWrapper}>\n    <div className={css.sideMenuTitle}>General</div>\n    <SideMenuItem pageName={DashboardPages.DASHBOARD_PAGE}>\n      <FontAwesomeIcon\n        icon={faLaptopCode}\n        size=\"2x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Dashboard</span>\n    </SideMenuItem>\n    <SideMenuItem pageName={DashboardPages.APPLICATION_PAGE}>\n      <FontAwesomeIcon\n        icon={faGripHorizontal}\n        size=\"3x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Applications</span>\n    </SideMenuItem>\n    <SideMenuItem pageName={DashboardPages.SETTINGS_PAGE}>\n      <FontAwesomeIcon\n        icon={faProjectDiagram}\n        size=\"2x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Devices</span>\n    </SideMenuItem>\n    <SideMenuItem pageName={DashboardPages.HELP_PAGE}>\n      <FontAwesomeIcon\n        icon={faHeadset}\n        size=\"2x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Help</span>\n    </SideMenuItem>\n  </section>\n);\n\nconst SideMenuItem = ({children, pageName}: SideMenuItem) => {\n  const {\n    currentDashboardPage,\n    selectDashboardPage\n  } = useDashboardPageNavigation();\n  return (\n    <span\n      onClick={() => selectDashboardPage(pageName)}\n      className={classNames(css.sideMenuItem, {\n        [css.selected]: currentDashboardPage === pageName\n      })}\n    >\n      {<>{children}</>}\n    </span>\n  );\n};\n","import React, {useState, createContext} from \"react\";\nimport {AppDetails, UUID} from \"../types/internal-types\";\n\ntype TPinnedApp = Pick<AppDetails, \"uuid\" | \"name\">;\n\nexport interface PinnedAppsContextProps {\n  pinnedAppsList: TPinnedApp[];\n  pinnApp: (appDetails: TPinnedApp) => void;\n  getPinnedApp: (uuid: UUID) => TPinnedApp | undefined;\n  removeApp: (uuid: UUID) => void;\n}\n\nexport const PinnedAppsContext = createContext<PinnedAppsContextProps>({\n  pinnedAppsList: [],\n  pinnApp: () => {},\n  getPinnedApp: () => ({name: \"\", uuid: \"\"}),\n  removeApp: () => {}\n});\n\nexport const PinnedAppsContextProvider: React.FC = ({children}) => {\n  const [pinnedAppsList, setPinnedListApps] = useState<TPinnedApp[]>([]);\n\n  const pinnApp = (appDetails: TPinnedApp) =>\n    getPinnedApp(appDetails.uuid)\n      ? null\n      : setPinnedListApps([...pinnedAppsList, appDetails]);\n\n  const removeApp = (uuidToRemove: AppDetails[\"uuid\"]) =>\n    setPinnedListApps(pinnedAppsList.filter(({uuid}) => uuid !== uuidToRemove));\n\n  const getPinnedApp = (uuid: AppDetails[\"uuid\"]) =>\n    pinnedAppsList.find((pinnedApp) => pinnedApp.uuid === uuid);\n\n  return (\n    <PinnedAppsContext.Provider\n      value={{\n        pinnedAppsList,\n        pinnApp,\n        getPinnedApp,\n        removeApp\n      }}\n    >\n      {children}\n    </PinnedAppsContext.Provider>\n  );\n};\n","import {useContext} from \"react\";\nimport {PinnedAppsContext} from \"../Providers/PinnedAppsContext\";\n\nexport const usePinnedAppsContext = () => useContext(PinnedAppsContext);\n","import * as React from \"react\";\n\ntype Weight = \"thin\" | \"normal\" | \"bold\";\n\nexport interface TextProps {\n  fontSize: string;\n  color?: string;\n  weight?: Weight;\n  width?: string;\n  skeletonColor?: string;\n  showSkeleton?: boolean;\n  children?: JSX.Element | string | number;\n  className?: string;\n}\n\nexport const Text: React.SFC<TextProps> = ({\n  fontSize,\n  color,\n  weight = \"normal\",\n  width = \"auto\",\n  skeletonColor = \"#ffffff\",\n  showSkeleton,\n  children,\n  className\n}) => {\n  const fontWeight = (weight: Weight) => {\n    switch (weight) {\n      case \"thin\":\n        return {\n          fontFamily: '\"Open Sans Light\", sans-serif',\n          weight\n        };\n      case \"normal\":\n        return {\n          fontFamily: '\"Open Sans Normal\", sans-serif',\n          weight\n        };\n      case \"bold\":\n        return {\n          fontFamily: '\"Open Sans Bold\", sans-serif',\n          weight\n        };\n    }\n  };\n\n  const commonStyle = {\n    fontSize,\n    color,\n\n    ...fontWeight(weight)\n  };\n\n  const styles = {};\n\n  const skeletonStyles = {\n    backgroundColor: skeletonColor,\n    content: \"\",\n    width\n  };\n\n  return (\n    <>\n      {showSkeleton ? (\n        <div style={{...commonStyle, ...skeletonStyles}} />\n      ) : (\n        <span className={className || \"\"} style={{...commonStyle, ...styles}}>\n          {children}\n        </span>\n      )}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./Thumbnail.module.scss\";\nimport classNamesHelper from \"classnames\";\nimport {Text} from \"../Text\";\n\ninterface ThumbnailProps {\n  name: string;\n  inDndState?: boolean;\n  size?: TSizes;\n  className?: string;\n}\n\ntype TSizes = \"x1\" | \"x2\";\n\nexport const Thumbnail: React.FC<ThumbnailProps> = ({\n  name,\n  inDndState = false,\n  size = \"x2\",\n  className\n}) => {\n  let classes = \"\";\n  let fontSize = \"\";\n\n  switch (size) {\n    case \"x1\":\n      classes = css.smallWrapper;\n      fontSize = \"10px\";\n      break;\n    case \"x2\":\n      classes = css.normalWrapper;\n      fontSize = \"16px\";\n      break;\n  }\n\n  return (\n    <div\n      className={classNamesHelper(classes, className, {\n        [css.withDndStyles]: inDndState\n      })}\n    >\n      <div className={css.thumbnailText}>\n        <Text weight=\"bold\" fontSize={fontSize}>\n          {`${name.charAt(0).toUpperCase()}${name.charAt(1).toUpperCase()}`}\n        </Text>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {usePinnedAppsContext} from \"../../../hooks/usePinnedApps\";\nimport {UUID} from \"../../../types/internal-types\";\nimport classNames from \"classnames\";\nimport {Thumbnail} from \"../../Thumbnail/Thumbnail\";\n\nexport const PinnedSection = () => {\n  const {pinnedAppsList} = usePinnedAppsContext();\n\n  return (\n    <section className={css.pinnedSectionWrapper}>\n      <div className={css.sideMenuTitle}>Pinned</div>\n      {pinnedAppsList.length === 0 ? (\n        <div className={css.pinnedEmptyState}>\n          <div className={css.explanation}>\n            Here you can store the most commonly used Applications. Head to The\n            My Applications page and click on the thumbtack.\n          </div>\n        </div>\n      ) : (\n        pinnedAppsList.map(({name, uuid}) => (\n          <PinnedAppItem uuid={uuid} name={name} key={uuid} />\n        ))\n      )}\n    </section>\n  );\n};\n\nconst PinnedAppItem: React.FC<{uuid: UUID; name: string}> = ({uuid, name}) => {\n  const {removeApp} = usePinnedAppsContext();\n\n  return (\n    <div className={classNames(css.sideMenuItem, css.pinnedApp)}>\n      <Thumbnail name={name} size=\"x1\" />\n      <span className={classNames(css.pinnedAppText)}>{name}</span>\n      <FontAwesomeIcon\n        onClick={() => removeApp(uuid)}\n        className={css.removePinnedAppIcon}\n        icon={faTimesCircle}\n      />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport {Text} from \"../../Text\";\n\nexport const LoggedInUserSection = () => (\n  <section className={css.loggedInUserSectionWrapper}>\n    <div className={css.userThumbnail}></div>\n    <Text className={css.userName} weight=\"bold\" fontSize=\"14px\">\n      Cptn. Cat Sparrow\n    </Text>\n    <Text className={css.userNameCollapsed} weight=\"bold\" fontSize=\"12px\">\n      Account Settings\n    </Text>\n\n    <div className={css.userName}></div>\n    <div className={css.userActions}></div>\n  </section>\n);\n","import * as React from \"react\";\nimport css from \"./SideMenu.module.scss\";\nimport {GeneralSection} from \"./MenuSections/GeneralSection\";\nimport {PinnedSection} from \"./MenuSections/PinnedSection\";\nimport {LoggedInUserSection} from \"./MenuSections/LoggedInUserSection\";\nimport {Text} from \"../Text\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleLeft,\n  faSignOutAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport withSizes, {Sizes} from \"react-sizes\";\nimport classNames from \"classnames\";\n\ninterface SideMenuProps {\n  isMinimizedView: boolean;\n  isMinimizedByViewPort?: boolean;\n  doMinimize: () => void;\n}\n\nconst SideMenuComp: React.FC<SideMenuProps> = ({\n  isMinimizedView,\n  isMinimizedByViewPort,\n  doMinimize\n}) => {\n  const isMinimized = isMinimizedByViewPort || isMinimizedView;\n  return (\n    <div\n      className={classNames({\n        [css.minimizedView]: isMinimized\n      })}\n    >\n      <nav className={css.sideMenuWrapper}>\n        <LoggedInUserSection />\n        <GeneralSection />\n        <PinnedSection />\n        <section className={css.footerSection}>\n          <div className={css.signoutButton}>\n            <FontAwesomeIcon icon={faSignOutAlt} className={css.faSignOutAlt} />\n            <span className={css.menuItemText}>\n              <Text fontSize=\"12px\" weight=\"bold\">\n                SIGN OUT\n              </Text>\n            </span>\n          </div>\n          <div\n            className={classNames(css.minimizeSideMenuIcon, {\n              [css.isMinimized]: isMinimized,\n              [css.disabled]: isMinimizedByViewPort\n            })}\n            onClick={doMinimize}\n          >\n            <FontAwesomeIcon\n              icon={faAngleDoubleLeft}\n              className={css.faAngleLeft}\n            ></FontAwesomeIcon>\n          </div>\n        </section>\n      </nav>\n    </div>\n  );\n};\n\nconst mapSizesToProps = ({width}: Sizes) => ({\n  isMinimizedByViewPort: width < 1042\n});\n\nexport const SideMenu = withSizes(mapSizesToProps)(\n  SideMenuComp as any\n) as typeof SideMenuComp;\n","const thumb = require(\"./assets/img/react_logo.svg\");\nexport const mockAppList = [\n  {\n    name: \"Smart Home\",\n    id: \"2323-234234-1234\",\n    viewportSize: {\n      width: 800,\n      height: 800\n    }\n  }\n];\n\nexport const mockDeviceList = [\n  {\n    enabled: 1,\n    id: 6,\n    type: 999,\n    lastUpdateTs: 1532473013,\n    uuid: \"ac6de837-7863-72a9-c789-a0aae7e9d010\"\n  }\n];\nexport const thumbnail = thumb;\n","import {thumbnail} from \"../../serverApiMocks\";\n\nimport {\n  NodeList,\n  GetUserNodeListDTO,\n  UUID,\n  OnGetNodeInfoCallbackDTO,\n  NoteDetails,\n  NodeSettingsDTO,\n  NodeSettingsData\n} from \"../../types/internal-types\";\n\nexport class DashboardServerApi {\n  makeSenseApi = window.MkSAPIBuilder.GetInstance();\n\n  constructor() {\n    this.makeSenseApi.ConnectGateway(() =>\n      console.log(\"Dashboard connected to gateway\")\n    );\n    this.makeSenseApi.Gateway.OnGatewayDataArrivedCallback = (data: any) => {};\n    this.makeSenseApi.Gateway.OnGatewayAdminCallback = (data: any) => {\n      console.log(\"OnGatewayAdminCallbac-k\", data);\n    };\n  }\n\n  getApplicationThumbnail = () => {\n    console.log(\"/applications/:appId:/thumbnail\");\n    return Promise.resolve(thumbnail);\n  };\n\n  getNodeDetails = (uuid: UUID) => {\n    const nodeInfoPromise = new Promise<NoteDetails>((resolve) => {\n      this.makeSenseApi.GetNodeInfo(\n        uuid,\n        (response: OnGetNodeInfoCallbackDTO, _error: any) => {\n          const payload = response && response.data && response.data.payload;\n          resolve(payload);\n        }\n      );\n    });\n    return nodeInfoPromise;\n  };\n\n  getNodeSettings = (uuid: UUID): Promise<NodeSettingsData> => {\n    return Promise.all([\n      this.getNodeHtmlSettings(uuid),\n      this.getNodeScriptsSettings(uuid)\n    ]).then((nodeSettingsFiles) => {\n      const [html, scripts] = nodeSettingsFiles;\n      return {html: [html], scripts: [scripts], css: []} as any;\n    });\n  };\n\n  getAppData = (uuid: UUID): Promise<any> => {\n    return Promise.all([this.getAppHtml(uuid), this.getAppScripts(uuid)]).then(\n      (data) => {\n        const [html, scripts] = data;\n        return {html: [html], scripts: [scripts], css: []} as any;\n      }\n    );\n  };\n\n  private getNodeScriptsSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"js\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getAppHtml = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"app\",\n          file_name: \"\",\n          file_type: \"html\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getAppScripts = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"app\",\n          file_name: \"\",\n          file_type: \"js\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getNodeHtmlSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"html\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  getNodeList = () => {\n    const deviceListDataPromise = new Promise<NodeList[]>((resolve, reject) => {\n      this.makeSenseApi.Webface.GetUserNodeList(\n        (response: GetUserNodeListDTO) => {\n          resolve(response.nodes.data);\n          if (response && response.error) {\n            reject(\"OnGatewayDataArrivedCallback received an error\");\n          }\n        }\n      );\n    });\n    return deviceListDataPromise;\n  };\n}\n","import {createContext} from \"react\";\nimport {DashboardServerApi} from \"../services/DashboardServerApi\";\n\nexport interface ServerApiContext {\n  dashboardServerApi: DashboardServerApi;\n}\n\nexport const ServerApiContext = createContext<ServerApiContext>({\n  dashboardServerApi: new DashboardServerApi()\n});\n\nexport const DashboardContext = ServerApiContext;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\n\ninterface OwnProps {\n  html: string;\n  scripts?: string;\n}\nconst ownState = {};\n\nexport class Portal extends React.Component<OwnProps, typeof ownState> {\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n  readonly state = ownState;\n  private iframeRoot = React.createRef<HTMLIFrameElement>();\n\n  componentDidMount() {\n    this.createIframeContent();\n  }\n\n  decodeDomProperty(hexxStream: string | undefined) {\n    if (!hexxStream) {\n      return;\n    }\n\n    const hexString = hexxStream.toString(); //force conversion\n    let parstedString = \"\";\n    for (\n      let i = 0;\n      i < hexString.length && hexString.substr(i, 2) !== \"00\";\n      i += 2\n    )\n      parstedString += String.fromCharCode(\n        parseInt(hexString.substr(i, 2), 16)\n      );\n    return parstedString;\n  }\n\n  createIframeContent() {\n    if (this.iframeRoot.current) {\n      const htmlString = this.decodeDomProperty(this.props.html);\n      const script = this.decodeDomProperty(this.props.scripts);\n      const iframeWrapper: any = ReactDOM.findDOMNode(this.iframeRoot.current);\n\n      if (iframeWrapper && iframeWrapper.contentDocument) {\n        iframeWrapper.contentDocument.open();\n        iframeWrapper.contentDocument.write(htmlString);\n        iframeWrapper.contentDocument.write(`<script>${script}</script>`);\n        iframeWrapper.contentDocument.close();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <iframe\n          title=\"mk-portal\"\n          style={{display: \"block\", width: \"100%\", height: \"100%\"}}\n          frameBorder=\"0\"\n          ref={this.iframeRoot}\n        />\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./DashboardTile.module.scss\";\nimport Modal from \"react-responsive-modal\";\nimport {DashboardContext} from \"../../../Providers/ServerApiContext\";\nimport {Portal} from \"../../../components/Portal\";\nimport {UUID} from \"../../../types/internal-types\";\n\nexport interface DashboardTileProps {\n  uuid: UUID;\n  name: string;\n  description: string;\n  appThumbnail: string;\n  viewportSize: {\n    width: number;\n    height: number;\n  };\n}\n\nconst initialDashboardTileState = {\n  isMkAppOpen: false,\n  html: \"\",\n  scripts: \"\"\n};\n\nexport class DashboardTile extends React.Component<\n  DashboardTileProps,\n  typeof initialDashboardTileState\n> {\n  readonly state = initialDashboardTileState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  renderThumbnail = () => {\n    const {description} = this.props;\n    return (\n      <div className={css.dashboardThumbnailWrapper}>\n        {description ? (\n          <div className={css.textThumbnailLarge}>\n            {description.charAt(0).toUpperCase()}\n          </div>\n        ) : (\n          <div className={css.textThumbnail}>MKapp</div>\n        )}\n      </div>\n    );\n  };\n\n  openMKAppMainView = async () => {\n    const {\n      html: [htmlStream],\n      scripts: [scriptStream]\n    } = await this.context.dashboardServerApi.getAppData(this.props.uuid);\n    this.setState({isMkAppOpen: true, html: htmlStream, scripts: scriptStream});\n  };\n\n  closeMKAppMainView = () => {\n    this.setState({isMkAppOpen: false});\n  };\n\n  render() {\n    const {isMkAppOpen} = this.state;\n    const {description} = this.props;\n    const last6chars = this.props.uuid.substring(\n      this.props.uuid.length - 6,\n      this.props.uuid.length\n    );\n    return (\n      <div\n        onDoubleClick={this.openMKAppMainView}\n        className={`\n          ${css.dashboardWrapper} \n          ${css.smartHome}`}\n      >\n        <div className={css.dashboardTitle}>\n          {this.renderThumbnail()}\n          {description ? description : `...${last6chars}`}\n        </div>\n        <div className={css.dashboardContent}>\n          {isMkAppOpen ? (\n            <Modal\n              closeOnEsc\n              classNames={{modal: css.mkAppModalWrapper}}\n              onClose={this.closeMKAppMainView}\n              open={this.state.isMkAppOpen}\n            >\n              <Portal html={this.state.html} scripts={this.state.scripts} />\n            </Modal>\n          ) : (\n            <div>put knobs here</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import {MkAppDescription} from \"../../types/internal-types\";\nimport * as React from \"react\";\nimport {DashboardTileProps} from \"./DashboardTile/DashboardTile\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\n\ninterface AppLoaderProps {\n  mkAppInitData: MkAppDescription;\n  render: (loadedMkAppProps: DashboardTileProps) => React.ReactNode;\n}\n\nconst innitialState = {\n  appThumbnail: null as any,\n  mkAppLoadedData: {} as any,\n  appProps: {} as any,\n  description: \"\"\n};\n\nexport class AppLoader extends React.Component<\n  AppLoaderProps,\n  typeof innitialState\n> {\n  readonly state = innitialState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    //there shouls be cacsh managment here, so that Apploader wont fetch app list every time\n    try {\n      const appThumbnail = await this.context.dashboardServerApi.getApplicationThumbnail();\n      const nodeDetails = await this.context.dashboardServerApi.getNodeDetails(\n        this.props.mkAppInitData.uuid\n      );\n      this.setState({\n        appThumbnail,\n        description: nodeDetails && nodeDetails.description\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.render({\n          appThumbnail: this.state.appThumbnail,\n          description: this.state.description,\n          ...this.props.mkAppInitData\n        })}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport css from \"./PageTitle.module.scss\";\nimport classNames from \"classnames\";\n\ntype TThemes = \"thin\";\nexport interface PageTitleProps {\n  title: JSX.Element | string;\n  actions?: JSX.Element[] | JSX.Element;\n  theme?: TThemes;\n  className?: {[s: string]: string};\n}\nexport const PageTitle: React.FC<PageTitleProps> = ({\n  title,\n  actions,\n  theme,\n  className\n}) => {\n  return (\n    <header\n      className={classNames(css.pageTitle, {\n        [css.thin]: theme === \"thin\",\n        ...className\n      })}\n    >\n      <div className={css.pageTitleName}>{title}</div>\n      {actions && (\n        <div className={css.currentAppActions}>\n          {React.Children.map(actions, (child) => (\n            <>{child}</>\n          ))}\n        </div>\n      )}\n    </header>\n  );\n};\n","import * as React from \"react\";\nexport const DashboardTileSkeleton = () => <div>SKELETON</div>;\n","import {DashboardTile} from \"./DashboardTile/DashboardTile\";\nimport {AppLoader} from \"./AppLoader\";\nimport {MkAppDescription} from \"../../types/internal-types\";\nimport {PageTitle} from \"../../components/PageTitle/PageTitle\";\nimport * as React from \"react\";\nimport css from \"./Dashboard.module.scss\";\nimport {DashboardTileSkeleton} from \"../../components/Skeleton/DashboardTile\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\nimport {Text} from \"../../components/Text\";\n\nconst innitialDashboardsPageState = {appList: [] as any};\n\nexport class DashboardsPage extends React.Component<\n  {},\n  typeof innitialDashboardsPageState\n> {\n  readonly state = innitialDashboardsPageState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  public async componentDidMount() {\n    const appList = await this.context.dashboardServerApi.getNodeList();\n    this.setState({appList});\n  }\n\n  render() {\n    const {appList} = this.state;\n    return (\n      <>\n        <div className={css.underConstruction}>\n          <PageTitle title=\"DASHBOARD\" />\n          <div className={css.pageContentWrapper}>\n            {appList &&\n              appList.map((mkApp: MkAppDescription, index: any) => (\n                <AppLoader\n                  key={index}\n                  mkAppInitData={mkApp}\n                  render={(loadedProps) => {\n                    return loadedProps ? (\n                      <DashboardTile {...loadedProps} />\n                    ) : (\n                      <DashboardTileSkeleton />\n                    );\n                  }}\n                />\n              ))}\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"block\",\n            marginTop: \"20.7%\",\n            textAlign: \"center\",\n            zIndex: 10,\n            background: \"#d6eeff\",\n            position: \"relative\",\n            boxShadow: \"inset 20px 0 30px #fff\"\n          }}\n        >\n          <Text weight=\"bold\" fontSize=\"46px\" color=\"$grey01\">\n            UNDER CONSTRUCTION\n          </Text>\n        </div>\n      </>\n    );\n  }\n}\n","import {useContext} from \"react\";\nimport {ServerApiContext} from \"../Providers/ServerApiContext\";\n\nexport const useServerApiContext = () => useContext(ServerApiContext);\n","import {createContext} from \"react\";\n\ninterface AnimationsContext {\n  nodePageRef: React.RefObject<HTMLDivElement>;\n}\n\nexport const AnimationsContext = createContext<AnimationsContext>({\n  nodePageRef: null as any\n});\n","import {useEffect, useState} from \"react\";\n\nexport const useFetch = <DataType>(\n  fetcherFunction: Function\n): [boolean, DataType] => {\n  const [data, setData] = useState([] as unknown);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let data;\n      if (typeof fetcherFunction === \"function\") {\n        data = await fetcherFunction();\n      } else {\n        throw new Error(\"Please provide a fetcher fucntion\");\n      }\n      setData(data);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [fetcherFunction]);\n\n  return [isLoading, data as DataType];\n};\n","import camelCase from \"lodash/camelCase\";\n\nexport const toCamelCase = (obj: any) => {\n  return Object.keys(obj).reduce(\n    (acc, currnet) => ({...acc, ...{[camelCase(currnet)]: obj[currnet]}}),\n    {}\n  );\n};\n","import * as React from \"react\";\nimport css from \"./Loader.module.scss\";\nimport {Text} from \"../Text\";\n\nexport const Loader: React.FC = () => (\n  <div className={css.loading}>\n    <div className={css.spinner} />\n    <div>\n      <Text fontSize=\"12px\" weight=\"bold\" color=\"$grey01\">\n        LOADING...\n      </Text>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport css from \"./PageTitle.module.scss\";\nimport {Text} from \"../Text\";\nimport classNames from \"classnames\";\nexport interface PageTitleProps {\n  doAction: () => void;\n  icon?: JSX.Element;\n  text: string;\n  actionActive?: boolean;\n}\nexport const PageTitleAction: React.FC<PageTitleProps> = ({\n  doAction,\n  icon,\n  text,\n  actionActive\n}) => {\n  return (\n    <div\n      className={classNames(css.actionItem, {[css.active]: actionActive})}\n      onClick={doAction}\n    >\n      {icon && <div className={css.iconWrapper}>{icon}</div>}\n      <Text fontSize=\"14px\" weight=\"bold\" className={css.actionItemText}>\n        {text}\n      </Text>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {useServerApiContext} from \"../../../hooks/useServerApiContext\";\nimport css from \"./NodeSettings.module.scss\";\nimport {UUID, NodeSettingsData} from \"../../../types/internal-types\";\nimport {Portal} from \"../../../components/Portal\";\nimport {useFetch} from \"../../../hooks/useFetch\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {Loader} from \"../../../components/Loader/Loader\";\nimport {PageTitle} from \"../../../components/PageTitle/PageTitle\";\nimport {PageTitleAction} from \"../../../components/PageTitle/PageTitleAction\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ninterface NodeSettingsProps {\n  deviceUuid: UUID;\n  nodeName: string;\n  onClose: () => void;\n}\n\nexport const NodeSettings: React.FC<NodeSettingsProps> = ({\n  deviceUuid,\n  nodeName,\n  onClose\n}) => {\n  const {\n    dashboardServerApi: {getNodeSettings}\n  } = useServerApiContext();\n\n  const fetcherFucntion = React.useCallback(() => getNodeSettings(deviceUuid), [\n    deviceUuid,\n    getNodeSettings\n  ]);\n  const [isLoading, nodeSettingsData] = useFetch<NodeSettingsData>(\n    fetcherFucntion\n  );\n\n  return (\n    <div className={css.nodeSettingsWrapper}>\n      <PageTitle\n        title={nodeName}\n        theme=\"thin\"\n        className={{[css.nodeSettingsTitle]: css.nodeSettingsTitle}}\n        actions={\n          <PageTitleAction\n            icon={<FontAwesomeIcon icon={faTimes} className={css.faTimes} />}\n            doAction={onClose}\n            text=\"CLOSE\"\n          />\n        }\n      />\n      <div className={css.nodeSettingsContent}>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Portal\n            scripts={nodeSettingsData.scripts[0]}\n            html={nodeSettingsData.html[0]}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./Animations.module.scss\";\nimport {useAnimationsUtils} from \"../../../hooks/useAnimationsUtils\";\nimport {CSSTransition} from \"react-transition-group\";\ninterface OpenNodeSettingsAnimationProps {\n  isOpened: boolean;\n}\n\nexport const OpenNodeSettingsAnimation: React.FC<OpenNodeSettingsAnimationProps> = ({\n  children,\n  isOpened\n}) => {\n  const nodeCardRef = React.useRef<HTMLDivElement>(null);\n  const {calcDistanceFromParentTop} = useAnimationsUtils();\n\n  // React.useEffect(() => {\n  //   nodePageRef.current!.appendChild(React.createElement(\"div\"));\n  // });\n  const translateY = {\n    transform: `translateY(-${calcDistanceFromParentTop(nodeCardRef)}px)`\n  };\n  const transitionClassNames = {\n    enter: css.enter,\n    enterDone: css.enterDone,\n    exit: css.exit,\n    exitActive: css.exitActive,\n    exitDone: css.exitDone\n  };\n\n  return (\n    <CSSTransition\n      timeout={250}\n      in={isOpened}\n      classNames={transitionClassNames}\n    >\n      <div\n        ref={nodeCardRef}\n        className={css.animationBaseState}\n        style={isOpened ? translateY : {}}\n      >\n        <div\n          className={\n            isOpened ? css.cardSettingsOpenned : css.cardSettingsClosed\n          }\n        >\n          {children}\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n","import {useContext} from \"react\";\nimport {AnimationsContext} from \"../Providers/AnimationsContextProvider\";\n\nexport const useAnimationsUtils = () => {\n  const {nodePageRef} = useContext(AnimationsContext);\n\n  const calcDistanceFromParentTop = (ref: React.RefObject<HTMLDivElement>) => {\n    const nodePageTop =\n      nodePageRef.current && nodePageRef.current.getClientRects()[0].top + 20;\n    const refTop = ref.current && ref.current.getClientRects()[0].top;\n    return refTop && nodePageTop && refTop - nodePageTop;\n  };\n\n  return {nodePageRef, calcDistanceFromParentTop};\n};\n","import * as React from \"react\";\nimport styled, {keyframes} from \"styled-components\";\n\nexport const SkeletonShimmer: React.SFC<{width: string; color: string}> = ({\n  width,\n  color\n}) => {\n  const shimmerAnimations = keyframes`\n    0% {\n      background-position: 0 0;\n    }\n  \n    100% {\n      background-position: ${width} 0;\n    }\n  `;\n\n  const Shimmer = styled.div`\n    background-image: linear-gradient(\n      to right,\n      ${color} 0,\n      rgba(249, 250, 251, 0.8) 10%,\n      ${color} 20%\n    );\n    width: 100%;\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: 800px 104px;\n    display: inline-block;\n    position: absolute;\n    animation-duration: 1s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n    animation-name: ${shimmerAnimations};\n    animation-timing-function: linear;\n  `;\n\n  return <Shimmer />;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  //if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  // The URL constructor is available in all browsers that support SW.\n  const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n  if (publicUrl.origin !== window.location.origin) {\n    // Our service worker won't work if PUBLIC_URL is on a different origin\n    // from what our page is served on. This might happen if a CDN is used to\n    // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n    return;\n  }\n\n  window.addEventListener(\"load\", () => {\n    const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n    if (isLocalhost) {\n      // This is running on localhost. Let's check if a service worker still exists or not.\n      checkValidServiceWorker(swUrl, config);\n\n      // Add some additional logging to localhost, pointing developers to the\n      // service worker/PWA documentation.\n      navigator.serviceWorker.ready.then(() => {\n        console.log(\n          \"This web app is being served cache-first by a service \" +\n            \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n        );\n      });\n    } else {\n      // Is not localhost. Just register service worker\n      registerValidSW(swUrl, config);\n    }\n  });\n  //}\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\nimport {Text} from \"../../../components/Text\";\n\nexport interface OwnProps {\n  showSkeleton: boolean;\n  children?: string[] | string | number | JSX.Element;\n}\n\nexport const Subtitle: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    fontSize=\"10px\"\n    color=\"#768093\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"bold\"\n    width=\"70px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n\nexport const CardText: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    color=\"#2f3148\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"normal\"\n    fontSize=\"14px\"\n    width=\"100px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n","import React from \"react\";\nimport css from \"./NodeCard.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faCodeBranch} from \"@fortawesome/free-solid-svg-icons\";\nimport {SkeletonShimmer} from \"../../../components/SkeletonShimmer\";\nimport {Subtitle, CardText} from \"./NodeCardTypography\";\n\nexport interface NodeCardSummaryProps {\n  isLoading?: boolean;\n  onNodeSettingsClick: Function;\n  nodeDetails: any;\n}\n\nexport const NodeCardSummary: React.FC<NodeCardSummaryProps> = ({\n  isLoading = false,\n  onNodeSettingsClick,\n  nodeDetails: {name, type, uuid, online: isOnline}\n}) => {\n  return (\n    <div className={css.nodeCardSummaryWrapper}>\n      <CardIconSection type={type} />\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceType}\n        description={type}\n      >\n        DEVICE TYPE\n      </CardSection>\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceName}\n        description={name}\n      >\n        DEVICE NAME\n      </CardSection>\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceName}\n        description={uuid}\n      >\n        DEVICE ID\n      </CardSection>\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceStatus}\n        description={isOnline ? \"Connected\" : \"Disconnected\"}\n      >\n        STATUS\n      </CardSection>\n      <SummaryOptionsMenu onNodeSettingsClick={onNodeSettingsClick} />\n      {isLoading && (\n        <SkeletonShimmer width=\"1400px\" color=\"rgba(249, 250, 251, 0.001)\" />\n      )}\n    </div>\n  );\n};\n\nconst CardIconSection: React.FC<{type: string}> = ({type}) => (\n  <div className={`${css.section} ${css.IconSectionBackground}`}>\n    <FontAwesomeIcon icon={faCodeBranch} size=\"2x\" color=\"#768093\" />\n  </div>\n);\n\nconst SummaryOptionsMenu: React.FC<{onNodeSettingsClick: Function}> = ({\n  onNodeSettingsClick\n}) => (\n  <div className={`${css.deviceContentWrapper} ${css.deviceSettingsMenu}`}>\n    <span\n      className={css.deviceSettingsMenuIcon}\n      onClick={() => onNodeSettingsClick()}\n    >\n      <FontAwesomeIcon icon={faBars} size=\"2x\" color=\"#768093\" />\n    </span>\n  </div>\n);\n\ninterface CardSectionProps {\n  customClassName: string;\n  children: string;\n  isLoading: boolean;\n  description: string;\n}\n\nconst CardSection: React.FC<CardSectionProps> = ({\n  isLoading,\n  customClassName,\n  children,\n  description\n}) => (\n  <div\n    className={`${css.section} ${css.deviceContentWrapper} ${customClassName}`}\n  >\n    <Subtitle showSkeleton={isLoading}>{children}</Subtitle>\n    <CardText showSkeleton={isLoading}>\n      <span title={description}>{description}</span>\n    </CardText>\n  </div>\n);\n","import React from \"react\";\nimport css from \"./NodeCard.module.scss\";\nimport {NodeSettings} from \"../NodeSettings/NodeSettings\";\nimport {OpenNodeSettingsAnimation} from \"../NodeCardAnimations/OpenNodeSettingsAnimation\";\nimport {NodeCardSummary} from \"./NodeCardSummary\";\nimport classNames from \"classnames\";\nimport {Text} from \"../../../components/Text\";\n\nexport interface NodeCardProps {\n  isLoading: boolean;\n  selected?: boolean;\n  nodeDetails: any;\n}\n\nexport const NodeCard: React.FC<NodeCardProps> = ({\n  isLoading,\n  nodeDetails,\n  selected,\n  nodeDetails: {online: isOnline, name, uuid}\n}) => {\n  const [cardSettingOpenned, setCardSettingsOpenned] = React.useState(false);\n  const openCardSettings = () => setCardSettingsOpenned(true);\n  const closeCardSettings = () => setCardSettingsOpenned(false);\n\n  return (\n    <OpenNodeSettingsAnimation isOpened={cardSettingOpenned}>\n      <div\n        className={classNames(css.cardWrapper, {\n          [css.hovered]: cardSettingOpenned || selected,\n          [css.disabled]: !isOnline\n        })}\n      >\n        <div className={css.expandTicker} onClick={openCardSettings}>\n          <Text color=\"#768093\" weight=\"bold\" fontSize=\"10px\" width=\"100px\">\n            {cardSettingOpenned ? \"CLOSE\" : \"OPEN\"}\n          </Text>\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"100px\",\n            height: \"100px\"\n          }}\n        />\n        {!cardSettingOpenned ? (\n          <NodeCardSummary\n            nodeDetails={nodeDetails}\n            isLoading={isLoading}\n            onNodeSettingsClick={openCardSettings}\n          />\n        ) : (\n          <NodeSettings\n            nodeName={name}\n            onClose={closeCardSettings}\n            deviceUuid={uuid}\n          />\n        )}\n      </div>\n    </OpenNodeSettingsAnimation>\n  );\n};\n","import React from \"react\";\nimport css from \"./ViewButton.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSortAmountDown} from \"@fortawesome/free-solid-svg-icons\";\nimport {PageTitleAction} from \"../../../components/PageTitle/PageTitleAction\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {Text} from \"../../../components/Text\";\nimport classNames from \"classnames\";\nimport {FILTERED_VIEW_TYPE} from \"../../../constans/enums\";\ninterface ChangeViewModesProps {\n  inDNDState?: boolean;\n  filter: FILTERED_VIEW_TYPE;\n  setFilter: React.Dispatch<React.SetStateAction<FILTERED_VIEW_TYPE>>;\n}\n\nexport const ChangeViewModes: React.FC<ChangeViewModesProps> = ({\n  filter,\n  setFilter\n}) => {\n  const [isActionMenuOpen, setIsActionMenuOpen] = React.useState(false);\n\n  return (\n    <>\n      <PageTitleAction\n        doAction={() => setIsActionMenuOpen(!isActionMenuOpen)}\n        actionActive={isActionMenuOpen}\n        icon={\n          <FontAwesomeIcon\n            icon={faSortAmountDown}\n            className={css.afaSortAmountDown}\n          />\n        }\n        text=\"VIEW\"\n      />\n      <div className={css.selectedView}>\n        <Text fontSize=\"12px\" weight=\"bold\">\n          {filter}\n        </Text>\n      </div>\n      {isActionMenuOpen && (\n        <ActionMenu\n          setFilter={setFilter}\n          filter={filter}\n          isActionMenuOpen={isActionMenuOpen}\n          setIsActionMenuOpen={setIsActionMenuOpen}\n        />\n      )}\n    </>\n  );\n};\n\ninterface ActionMenuProps {\n  isActionMenuOpen: boolean;\n  setIsActionMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setFilter: React.Dispatch<React.SetStateAction<FILTERED_VIEW_TYPE>>;\n  filter: FILTERED_VIEW_TYPE;\n}\n\nconst ActionMenu: React.FC<ActionMenuProps> = ({\n  setFilter,\n  isActionMenuOpen,\n  setIsActionMenuOpen,\n  filter\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  React.useLayoutEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick, false);\n    return () => document.removeEventListener(\"mousedown\", handleClick, false);\n  });\n\n  const handleClick = (e: any) => {\n    if (ref.current && ref.current.contains(e.target)) {\n      return;\n    }\n    setIsActionMenuOpen(false);\n  };\n\n  return (\n    <CSSTransition\n      in={isActionMenuOpen}\n      appear\n      classNames={{\n        appear: css.appear,\n        enterDone: css.enterDone\n      }}\n      timeout={0}\n    >\n      <div className={css.actionMenu} ref={ref}>\n        <div\n          className={classNames(css.actionMenuItem, {\n            [css.selected]: filter === FILTERED_VIEW_TYPE.ALL\n          })}\n          onClick={() => {\n            setFilter(FILTERED_VIEW_TYPE.ALL);\n            setIsActionMenuOpen(false);\n          }}\n        >\n          {FILTERED_VIEW_TYPE.ALL}\n        </div>\n        <div\n          className={classNames(css.actionMenuItem, {\n            [css.selected]: filter === FILTERED_VIEW_TYPE.AVAILABLE\n          })}\n          onClick={() => {\n            setFilter(FILTERED_VIEW_TYPE.AVAILABLE);\n            setIsActionMenuOpen(false);\n          }}\n        >\n          {FILTERED_VIEW_TYPE.AVAILABLE}\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n","import {PageTitle} from \"../../components/PageTitle/PageTitle\";\nimport React from \"react\";\nimport css from \"./NodePage.module.scss\";\nimport {useServerApiContext} from \"../../hooks/useServerApiContext\";\nimport {AnimationsContext} from \"../../Providers/AnimationsContextProvider\";\nimport {NodeList} from \"../../types/internal-types\";\nimport {useFetch} from \"../../hooks/useFetch\";\nimport {toCamelCase} from \"../../utils/CamelCaseConverter\";\nimport {NodeCard} from \"./NodeCard/NodeCard\";\nimport {FILTERED_VIEW_TYPE} from \"../../constans/enums\";\nimport {ChangeViewModes} from \"../Applications/ViewButton/ViewButton\";\nimport {PageTitleAction} from \"../../components/PageTitle/PageTitleAction\";\n\nconst VIEW_FILTER_FUCNTIONS = {\n  [FILTERED_VIEW_TYPE.AVAILABLE]: (nodeList: NodeList[]) =>\n    nodeList.filter((node) => node.online),\n  [FILTERED_VIEW_TYPE.ALL]: (nodeList: NodeList[]) => nodeList\n};\n\nexport interface OwnProps {}\n\nexport const NodesPage: React.FC = () => {\n  const pageRef = React.useRef<HTMLDivElement>(null);\n  const {dashboardServerApi} = useServerApiContext();\n  const [isLoading, nodeList] = useFetch<NodeList[]>(\n    dashboardServerApi.getNodeList\n  );\n  const [filter, setFilter] = React.useState(FILTERED_VIEW_TYPE.ALL);\n  const [machinesOnly, setMachinesOnly] = React.useState(true);\n\n  const filterMachinesOnly = (nodeList: NodeList[]) => {\n    return machinesOnly\n      ? nodeList.filter((node) => node.name === \"Master\")\n      : nodeList;\n  };\n\n  return (\n    <AnimationsContext.Provider value={{nodePageRef: pageRef}}>\n      <>\n        <PageTitle\n          title={\n            <div className={css.pageTitleCustomWrapper}>\n              <div className={css.pageTitle}>MY DEVICES</div>\n              <PageTitleAction\n                doAction={() => setMachinesOnly(true)}\n                text=\"machines\"\n                actionActive={machinesOnly}\n              />\n              <PageTitleAction\n                doAction={() => setMachinesOnly(false)}\n                text=\"all nodes\"\n                actionActive={!machinesOnly}\n              />\n            </div>\n          }\n          actions={<ChangeViewModes setFilter={setFilter} filter={filter} />}\n        />\n        <div ref={pageRef} className={css.pageContentWrapper}>\n          {filterMachinesOnly(VIEW_FILTER_FUCNTIONS[filter](nodeList)).map(\n            (node, index) => (\n              <div key={index} className={css.nodeCardWrapper}>\n                <NodeCard\n                  nodeDetails={toCamelCase(node)}\n                  isLoading={isLoading}\n                />\n              </div>\n            )\n          )}\n        </div>\n      </>\n    </AnimationsContext.Provider>\n  );\n};\n","import React, {useState, createContext} from \"react\";\nimport {AppDetails, UUID} from \"../types/internal-types\";\n\nexport interface AppSteamDetails {\n  html: string;\n  script?: string;\n  styles?: string;\n}\n\ninterface CurrentFocusedApp extends AppSteamDetails {\n  currentAppName: string;\n  currentAppId: UUID;\n}\n\ninterface FocusedApplication {\n  focusedAppStreams: AppSteamDetails | null;\n  currentAppName: AppDetails[\"name\"];\n  setCurrentFocusedApp: (st: CurrentFocusedApp) => void;\n  removeFromFocus: () => void;\n  currentAppId: UUID;\n}\n\nexport const FocusedApplicationContext = createContext<FocusedApplication>({\n  focusedAppStreams: null,\n  currentAppName: \"\",\n  setCurrentFocusedApp: (_st: CurrentFocusedApp) => {},\n  removeFromFocus: () => {},\n  currentAppId: \"\"\n});\n\nexport const FocusedAppContextProvider: React.FC = ({children}) => {\n  const [currentAppName, setCurrentAppName] = useState<AppDetails[\"name\"]>(\"\");\n  const [currentAppId, setCurrentAppId] = useState<AppDetails[\"uuid\"]>(\"\");\n  const [\n    focusedAppStreams,\n    setAppSteamDetails\n  ] = useState<AppSteamDetails | null>(null);\n\n  const setCurrentFocusedApp = ({\n    html,\n    script,\n    currentAppName,\n    currentAppId\n  }: CurrentFocusedApp) => {\n    setAppSteamDetails({html, script});\n    setCurrentAppName(currentAppName);\n    setCurrentAppId(currentAppId);\n  };\n\n  const removeFromFocus = () => {\n    setAppSteamDetails(null);\n    setCurrentAppName(\"\");\n  };\n  return (\n    <FocusedApplicationContext.Provider\n      value={{\n        currentAppName,\n        setCurrentFocusedApp,\n        removeFromFocus,\n        focusedAppStreams,\n        currentAppId\n      }}\n    >\n      {children}\n    </FocusedApplicationContext.Provider>\n  );\n};\n","import {useContext} from \"react\";\nimport {FocusedApplicationContext} from \"../Providers/FocusedAppContextProvider\";\n\nexport const useFocusedApplication = () =>\n  useContext(FocusedApplicationContext);\n","import React from \"react\";\nimport css from \"./PinnApp.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\nimport {faThumbtack} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface PinnAppProps {\n  doPinnApp?: () => void;\n  isPinned: boolean;\n  externalstyles?: string;\n}\nexport const PinnApp: React.FC<PinnAppProps> = ({\n  doPinnApp,\n  isPinned,\n  externalstyles\n}) => {\n  return (\n    <span onClick={doPinnApp ? doPinnApp : () => {}}>\n      <FontAwesomeIcon\n        className={classNames(\n          css.pinnAppWrapper,\n          css.pinnedIcon,\n          externalstyles,\n          {\n            [css.pinned]: isPinned\n          }\n        )}\n        icon={faThumbtack}\n        size=\"1x\"\n      />\n    </span>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./Applications.module.scss\";\nimport classNames from \"classnames\";\nimport {Text} from \"../../components/Text\";\nimport {Flipped} from \"react-flip-toolkit\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\";\nimport {useApplicationDND} from \"../../hooks/useApplicationDND\";\nimport {UUID, AppDetails} from \"../../types/internal-types\";\nimport {Loader} from \"../../components/Loader/Loader\";\nimport {usePinnedAppsContext} from \"../../hooks/usePinnedApps\";\nimport {Thumbnail} from \"../../components/Thumbnail/Thumbnail\";\nimport {useServerApiContext} from \"../../hooks/useServerApiContext\";\nimport {useFocusedApplication} from \"../../hooks/useFocusedApplication\";\nimport {PinnApp} from \"../../components/PinnApp/PinnApp\";\nimport {useDashboardPageNavigation} from \"../../hooks/useDashboardPageNavigation\";\nimport {DashboardPages} from \"../../constans/enums\";\n\ninterface ApplicationTileProps {\n  thumbnail?: string;\n  name: string;\n  description: string;\n  index: number;\n  id: number;\n  uuid: UUID;\n  inDNDState: boolean;\n  online: boolean;\n  moveAppTile: (dragIndex: number, hoverIndex: number) => void;\n}\n\nexport const ApplicationTile: React.FC<ApplicationTileProps> = ({\n  name,\n  id,\n  uuid,\n  index,\n  moveAppTile,\n  inDNDState,\n  online\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    dashboardServerApi: {getNodeSettings}\n  } = useServerApiContext();\n  const {setCurrentFocusedApp} = useFocusedApplication();\n  const {\n    dragFunc,\n    dropFunc,\n    collectedProps: {isDragging}\n  } = useApplicationDND({\n    ref,\n    doDrag: moveAppTile,\n    dropIndex: index,\n    canDrag: inDNDState,\n    id\n  });\n  const {selectDashboardPage} = useDashboardPageNavigation();\n\n  dragFunc(dropFunc(ref));\n\n  const applicationTileClasses = classNames(css.applicationTile, {\n    [css.withDndStyles]: inDNDState,\n    [css.dragging]: isDragging,\n    [css.appIsLoading]: isLoading,\n    [css.notAvailable]: !online\n  });\n\n  const openApp = async () => {\n    setIsLoading(true);\n    const {\n      html: [htmlStream],\n      scripts: [scriptStream]\n    } = await getNodeSettings(uuid);\n    setCurrentFocusedApp({\n      html: htmlStream,\n      script: scriptStream,\n      currentAppName: name,\n      currentAppId: uuid\n    });\n    selectDashboardPage(DashboardPages.FOCUSED_APP);\n  };\n\n  return (\n    <div>\n      <div className={css.dndPlaceHolder} />\n      <Flipped flipId={id}>\n        <div className={css.applicationTileWrapper}>\n          <div\n            ref={ref}\n            className={applicationTileClasses}\n            style={{\n              opacity: isDragging ? 0 : 1\n            }}\n          >\n            <div className={css.thumbnailWrapper}>\n              <Thumbnail name={name} inDndState={inDNDState} />\n            </div>\n            <OptionsMenu\n              inDndState={inDNDState}\n              isLoading={isLoading}\n              appDetails={{\n                name,\n                uuid\n              }}\n            />\n            <Text className={css.appName} weight=\"normal\" fontSize=\"12px\">\n              {name}\n            </Text>\n            <OpenApplication onOpenAppClick={openApp} />\n            {isLoading && (\n              <div className={css.apploader}>\n                <Loader />\n              </div>\n            )}\n            {!online && <div className={css.notAvailablePlaceholder} />}\n          </div>\n        </div>\n      </Flipped>\n    </div>\n  );\n};\n\nconst OpenApplication: React.FC<{onOpenAppClick: Function}> = ({\n  onOpenAppClick\n}) => {\n  return (\n    <div className={css.openApp} onClick={() => onOpenAppClick()}>\n      <div className={css.openAppInner}>\n        <Text className={css.openAppText} fontSize=\"10px\" weight=\"bold\">\n          Open\n        </Text>\n      </div>\n    </div>\n  );\n};\n\ninterface OptionsMenuProps {\n  inDndState: boolean;\n  appDetails: Pick<AppDetails, \"name\" | \"uuid\">;\n  isLoading: boolean;\n}\n\nconst OptionsMenu: React.FC<OptionsMenuProps> = ({\n  inDndState,\n  appDetails,\n  isLoading\n}) => {\n  const {pinnApp, getPinnedApp} = usePinnedAppsContext();\n  const isAppPinned = !!getPinnedApp(appDetails.uuid);\n  return (\n    <div className={css.optionsMenu}>\n      <PinnApp\n        doPinnApp={() => pinnApp(appDetails)}\n        isPinned={isAppPinned}\n        externalstyles={classNames({\n          [css.appIsLoading]: isLoading,\n          [css.optionsMenuDnd]: inDndState\n        })}\n      ></PinnApp>\n      <span onClick={() => console.log(\"bang!\")}>\n        <FontAwesomeIcon\n          className={classNames(css.optionsItem, {\n            [css.appIsLoading]: isLoading,\n            [css.optionsMenuDnd]: inDndState\n          })}\n          icon={faBars}\n          size=\"1x\"\n        />\n      </span>\n    </div>\n  );\n};\n","import {useDrop, DropTargetMonitor, useDrag} from \"react-dnd\";\nimport {DRAG_DROP_TYPE} from \"../Pages/Applications/Applications\";\n\ninterface DragItem {\n  dropIndex: number;\n  id: string;\n  type: string;\n}\n\ninterface UseApplicationDNDParams {\n  ref: React.RefObject<HTMLDivElement>;\n  doDrag: Function;\n  dropIndex: number;\n  canDrag: boolean;\n  id: number;\n}\n\ninterface CollectedProps {\n  isDragging: boolean;\n}\ntype UseApplicationDND = (\n  p: UseApplicationDNDParams\n) => {dragFunc: any; dropFunc: any; collectedProps: CollectedProps};\n\nexport const useApplicationDND: UseApplicationDND = ({\n  ref,\n  doDrag,\n  dropIndex,\n  canDrag,\n  id\n}) => {\n  const [, drop] = useDrop({\n    accept: DRAG_DROP_TYPE,\n    hover(item: DragItem, monitor: DropTargetMonitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.dropIndex;\n      const hoverIndex = dropIndex;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine Hovered on rectangle position on screen\n      const hoverBoundingRect = ref.current!.getBoundingClientRect();\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      const hoverMiddleX =\n        (hoverBoundingRect.left - hoverBoundingRect.right) / 2;\n      const hoverClientX = clientOffset!.x - hoverBoundingRect.right;\n      // Dragging rightwards\n      if (dragIndex < hoverIndex && hoverClientX < hoverMiddleX) {\n        return;\n      }\n\n      // Dragging leftwards\n      if (dragIndex > hoverIndex && hoverClientX > hoverMiddleX) {\n        return;\n      }\n\n      doDrag(dragIndex, hoverIndex);\n      item.dropIndex = hoverIndex;\n    }\n  });\n\n  const [collectedProps, drag] = useDrag({\n    item: {type: DRAG_DROP_TYPE, id, dropIndex},\n    canDrag,\n    collect: (monitor: any) => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  return {dragFunc: drag, dropFunc: drop, collectedProps};\n};\n","import * as React from \"react\";\nimport css from \"./RearrangeButton.module.scss\";\nimport {Text} from \"../../../components/Text\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faTimes,\n  faArrowsAltV\n} from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {PageTitleAction} from \"../../../components/PageTitle/PageTitleAction\";\n\ninterface RearrangeAppTilesProps {\n  inDNDState: boolean;\n  doRearrangeClick: () => void;\n  doSaveClick: () => void;\n  doCancelClick: () => void;\n}\n\nexport const RearrangeAppTiles: React.FC<RearrangeAppTilesProps> = ({\n  inDNDState,\n  doRearrangeClick,\n  doSaveClick,\n  doCancelClick\n}) => {\n  return (\n    <CSSTransition\n      in={inDNDState}\n      timeout={200}\n      classNames={{\n        enterDone: css.enterDone,\n        exitDone: css.inDndStateTransitionExitDone\n      }}\n    >\n      <div className={css.rearrangeButtonWrapper}>\n        <div className={css.rearrangeButtonWrapperInnter}>\n          <PageTitleAction\n            doAction={doRearrangeClick}\n            text=\"REARRANGE\"\n            actionActive={inDNDState}\n            icon={\n              <FontAwesomeIcon\n                icon={faArrowsAltV}\n                className={css.faArrowsAltV}\n              />\n            }\n          />\n          <CSSTransition\n            in={inDNDState}\n            timeout={300}\n            mountOnEnter\n            unmountOnExit\n            classNames={{\n              appear: css.appear,\n              enterDone: css.saveCancelAppsOrderEnterDone\n            }}\n          >\n            <span className={css.saveCancelAppsOrder}>\n              <span className={css.saveDNDState} onClick={doSaveClick}>\n                <FontAwesomeIcon\n                  icon={faCheck}\n                  className={classNames(css.saveIcon)}\n                />\n                <Text fontSize=\"12px\" weight=\"bold\">\n                  save\n                </Text>\n              </span>\n              <span className={css.cancelDNDState} onClick={doCancelClick}>\n                <FontAwesomeIcon icon={faTimes} className={css.cancelIcon} />\n                <Text fontSize=\"12px\" weight=\"bold\">\n                  cancel\n                </Text>\n              </span>\n            </span>\n          </CSSTransition>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./Applications.module.scss\";\nimport update from \"immutability-helper\";\nimport {useFetch} from \"../../hooks/useFetch\";\nimport {useServerApiContext} from \"../../hooks/useServerApiContext\";\nimport {PageTitle} from \"../../components/PageTitle/PageTitle\";\nimport {ApplicationTile} from \"./ApplicationTile\";\nimport {Flipper} from \"react-flip-toolkit\";\nimport {RearrangeAppTiles} from \"./RearrangeButton/RearrangeButton\";\nimport {ChangeViewModes} from \"./ViewButton/ViewButton\";\nimport {NodeList} from \"../../types/internal-types\";\nimport {FILTERED_VIEW_TYPE} from \"../../constans/enums\";\n\nexport const DRAG_DROP_TYPE = \"applicationTile\";\n\nconst VIEW_FILTER_FUCNTIONS = {\n  [FILTERED_VIEW_TYPE.AVAILABLE]: (nodeList: NodeList[]) =>\n    nodeList.filter((node) => node.online),\n  [FILTERED_VIEW_TYPE.ALL]: (nodeList: NodeList[]) => nodeList\n};\n\nexport const ApplicationsPage: React.FC = () => {\n  const {dashboardServerApi} = useServerApiContext();\n  const [isLoading, nodeList] = useFetch<NodeList[]>(\n    dashboardServerApi.getNodeList\n  );\n  const [orderedNodeList, setOrderedNodeList] = React.useState<any>([]);\n  const [previousOrderedNodeList, setPreviousOrderedNodeList] = React.useState(\n    orderedNodeList\n  );\n  const [inDNDState, setDNDState] = React.useState(false);\n  const [filter, setFilter] = React.useState(FILTERED_VIEW_TYPE.ALL);\n\n  React.useEffect(() => {\n    setOrderedNodeList(nodeList);\n  }, [isLoading, nodeList]);\n\n  const moveAppTile = React.useCallback(\n    (dragIndex: number, hoverIndex: number) => {\n      const dragAppTile = orderedNodeList[dragIndex];\n      setOrderedNodeList(\n        update(orderedNodeList, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragAppTile]\n          ]\n        })\n      );\n    },\n    [orderedNodeList]\n  );\n\n  const doRearrangeClick = () => {\n    setDNDState(true);\n    setPreviousOrderedNodeList(orderedNodeList);\n  };\n\n  const doSaveClick = () => {\n    setDNDState(false);\n  };\n\n  const doCancelClick = () => {\n    setOrderedNodeList(previousOrderedNodeList);\n    setDNDState(false);\n  };\n\n  return (\n    <div>\n      <PageTitle\n        title=\"MY APPLICATIONS\"\n        actions={[\n          <RearrangeAppTiles\n            inDNDState={inDNDState}\n            doRearrangeClick={doRearrangeClick}\n            doSaveClick={doSaveClick}\n            doCancelClick={doCancelClick}\n          />,\n          <ChangeViewModes\n            inDNDState={inDNDState}\n            setFilter={setFilter}\n            filter={filter}\n          />\n        ]}\n      />\n      <Flipper flipKey={JSON.stringify(orderedNodeList.map((s: any) => s.id))}>\n        <div className={css.pageContentWrapper}>\n          {isLoading ? (\n            <span>should be a skeleton here</span>\n          ) : (\n            VIEW_FILTER_FUCNTIONS[filter](\n              orderedNodeList\n            ).map((nodeProps: any, index: number) => (\n              <ApplicationTile\n                moveAppTile={moveAppTile}\n                key={nodeProps.id}\n                index={index}\n                inDNDState={inDNDState}\n                {...nodeProps}\n              />\n            ))\n          )}\n        </div>\n      </Flipper>\n    </div>\n  );\n};\n","import React from \"react\";\nimport css from \"./FocusedApp.module.scss\";\nimport {useFocusedApplication} from \"../../hooks/useFocusedApplication\";\nimport {usePinnedAppsContext} from \"../../hooks/usePinnedApps\";\nimport {PinnApp} from \"../PinnApp/PinnApp\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {DashboardPages} from \"../../constans/enums\";\nimport {useDashboardPageNavigation} from \"../../hooks/useDashboardPageNavigation\";\nimport {PageTitleAction} from \"../PageTitle/PageTitleAction\";\n\nexport const FocusedAppActions: React.FC = () => {\n  const {selectDashboardPage} = useDashboardPageNavigation();\n  const {pinnApp, getPinnedApp} = usePinnedAppsContext();\n  const {\n    currentAppName,\n    currentAppId,\n    removeFromFocus\n  } = useFocusedApplication();\n  const isPinned = !!getPinnedApp(currentAppId);\n\n  React.useEffect(() => {\n    return () => removeFromFocus();\n    // eslint-disable-next-line\n  }, []);\n\n  const closeFocusedApp = () => {\n    selectDashboardPage(DashboardPages.APPLICATION_PAGE);\n  };\n  return (\n    <>\n      <PageTitleAction\n        icon={<PinnApp isPinned={isPinned} externalstyles={css.pinnAppIcon} />}\n        doAction={() => pinnApp({name: currentAppName, uuid: currentAppId})}\n        text=\"PIN\"\n      />\n      <PageTitleAction\n        icon={<FontAwesomeIcon icon={faTimes} className={css.faTimes} />}\n        doAction={closeFocusedApp}\n        text=\"CLOSE\"\n      />\n    </>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./FocusedApp.module.scss\";\nimport {Portal} from \"../Portal\";\nimport {useFocusedApplication} from \"../../hooks/useFocusedApplication\";\nimport {PageTitle} from \"../PageTitle/PageTitle\";\nimport {Thumbnail} from \"../Thumbnail/Thumbnail\";\nimport {Text} from \"../Text\";\nimport {FocusedAppActions} from \"./FocusedAppActions\";\n\nexport const FocusedApp: React.FC = () => {\n  const {focusedAppStreams, currentAppName} = useFocusedApplication();\n\n  return (\n    <>\n      <PageTitle\n        title={\n          <>\n            <Thumbnail\n              className={css.currentAppThumbnail}\n              name={currentAppName}\n              size=\"x2\"\n            />\n            <Text fontSize=\"18px\" weight=\"bold\">\n              {currentAppName}\n            </Text>\n          </>\n        }\n        actions={<FocusedAppActions />}\n      />\n      <Portal\n        html={focusedAppStreams!.html}\n        scripts={focusedAppStreams!.script}\n      ></Portal>\n    </>\n  );\n};\n","import React, {useEffect} from \"react\";\nimport css from \"./App.module.scss\";\nimport {SideMenu} from \"../SideMenu/SideMenu\";\nimport {DashboardsPage} from \"../../Pages/Dashboard/Dashboard\";\nimport {NodesPage} from \"../../Pages/Nodes/NodesPage\";\nimport {ApplicationsPage} from \"../../Pages/Applications/Applications\";\nimport {DashboardPages} from \"../../constans/enums\";\nimport {useDashboardPageNavigation} from \"../../hooks/useDashboardPageNavigation\";\nimport {FocusedApp} from \"../FocusedApp/FocusedApp\";\nimport {CSSTransition} from \"react-transition-group\";\n\nexport const App: React.FC = () => {\n  const {currentDashboardPage} = useDashboardPageNavigation();\n  const [isMinimizedSideMenu, setIsMinimizedSideMenu] = React.useState(false);\n  const [isMounted, setIsMounted] = React.useState<boolean>(true);\n  const [\n    currentPageToRender,\n    setCurrentPageToRender\n  ] = React.useState<null | DashboardPages>(null);\n\n  useEffect(() => {\n    setIsMounted(false);\n\n    const timeoutId = setTimeout(() => {\n      setCurrentPageToRender(currentDashboardPage);\n      setIsMounted(true);\n    }, 300);\n    return () => clearTimeout(timeoutId);\n  }, [currentDashboardPage]);\n\n  const getPage = () => {\n    switch (currentPageToRender) {\n      case DashboardPages.DASHBOARD_PAGE:\n        return <DashboardsPage />;\n      case DashboardPages.SETTINGS_PAGE:\n        return <NodesPage />;\n      case DashboardPages.APPLICATION_PAGE:\n        return <ApplicationsPage />;\n      case DashboardPages.FOCUSED_APP:\n        return <FocusedApp />;\n      default:\n        return <DashboardsPage />;\n    }\n  };\n\n  return (\n    <main className={css.siteContent}>\n      <SideMenu\n        isMinimizedView={isMinimizedSideMenu}\n        doMinimize={() => setIsMinimizedSideMenu(!isMinimizedSideMenu)}\n      />\n      <section className={css.pageRightWrapper}>\n        <div className={css.pageBasePlaceholder} />\n        <CSSTransition\n          in={isMounted}\n          timeout={0}\n          classNames={{\n            enterDone: css.slideInAnimation,\n            exitDone: css.slideOutAnimation\n          }}\n        >\n          <section className={css.pageWrapper}>{getPage()}</section>\n        </CSSTransition>\n      </section>\n    </main>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {AppWithProviders as App} from \"./components/AppWithProviders/AppWithProviders\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import * as React from \"react\";\nimport {App} from \"../App/App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\nimport {DashboardServerApi} from \"../../services/DashboardServerApi\";\nimport \"../fonts.module.scss\";\nimport \"../globals.module.scss\";\nimport {DashboardPageNavigationProvider} from \"../../Providers/DashboardPageNavigationProvider\";\nimport {DndProvider} from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport {PinnedAppsContextProvider} from \"../../Providers/PinnedAppsContext\";\nimport {FocusedAppContextProvider} from \"../../Providers/FocusedAppContextProvider\";\n\nexport const AppWithProviders = () => (\n  <BrowserRouter>\n    <DndProvider backend={HTML5Backend}>\n      <DashboardContext.Provider\n        value={{dashboardServerApi: new DashboardServerApi()}}\n      >\n        <DashboardPageNavigationProvider>\n          <PinnedAppsContextProvider>\n            <FocusedAppContextProvider>\n              <App />\n            </FocusedAppContextProvider>\n          </PinnedAppsContextProvider>\n        </DashboardPageNavigationProvider>\n      </DashboardContext.Provider>\n    </DndProvider>\n  </BrowserRouter>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rearrangeButtonWrapper\":\"RearrangeButton_rearrangeButtonWrapper__2TZ_U\",\"rearrangeButtonWrapperInnter\":\"RearrangeButton_rearrangeButtonWrapperInnter__UGXB5\",\"cancelIcon\":\"RearrangeButton_cancelIcon__1FW1g\",\"saveIcon\":\"RearrangeButton_saveIcon__JbPwD\",\"cancelDNDState\":\"RearrangeButton_cancelDNDState__PFPO-\",\"saveDNDState\":\"RearrangeButton_saveDNDState__szc3m\",\"faArrowsAltV\":\"RearrangeButton_faArrowsAltV__1Vzlr\",\"saveCancelAppsOrder\":\"RearrangeButton_saveCancelAppsOrder__1Cr7h\",\"enterDone\":\"RearrangeButton_enterDone__3FEzM\",\"appear\":\"RearrangeButton_appear__lK7h7\",\"saveCancelAppsOrderEnterDone\":\"RearrangeButton_saveCancelAppsOrderEnterDone__3E3Yg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionItem\":\"PageTitle_actionItem__3GBKt\",\"active\":\"PageTitle_active__Q5kjd\",\"pageTitle\":\"PageTitle_pageTitle__ZJk1F\",\"thin\":\"PageTitle_thin__26MLb\",\"pageTitleName\":\"PageTitle_pageTitleName__8ACx7\",\"currentAppActions\":\"PageTitle_currentAppActions__2J5Xk\",\"iconWrapper\":\"PageTitle_iconWrapper__1Beps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionMenuWrapper\":\"ViewButton_actionMenuWrapper__2xfIA\",\"afaSortAmountDown\":\"ViewButton_afaSortAmountDown__2AkNU\",\"actionMenu\":\"ViewButton_actionMenu__2yXDn\",\"actionMenuItem\":\"ViewButton_actionMenuItem__nk_cG\",\"selected\":\"ViewButton_selected__3W72b\",\"selectedView\":\"ViewButton_selectedView__3c0zI\",\"appear\":\"ViewButton_appear__1hgU1\",\"enterDone\":\"ViewButton_enterDone__3yGCl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardWrapper\":\"DashboardTile_dashboardWrapper__28Ord\",\"smartHome\":\"DashboardTile_smartHome__15Ec8\",\"dashboardTitle\":\"DashboardTile_dashboardTitle__uLPNP\",\"dashboardThumbnailWrapper\":\"DashboardTile_dashboardThumbnailWrapper__RhMrs\",\"imageThumbnail\":\"DashboardTile_imageThumbnail__5oSvm\",\"imageSize\":\"DashboardTile_imageSize__qh-Dq\",\"textThumbnail\":\"DashboardTile_textThumbnail__3qtZB\",\"textThumbnailLarge\":\"DashboardTile_textThumbnailLarge__2Yibn\",\"dashboardContent\":\"DashboardTile_dashboardContent__2H0tE\",\"mkAppModalWrapper\":\"DashboardTile_mkAppModalWrapper__3yQwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transition\":\"Animations_transition__kygqn\",\"animationBaseState\":\"Animations_animationBaseState__1eNFN\",\"cardSettingsOpenned\":\"Animations_cardSettingsOpenned__3Q9Qx\",\"cardSettingsClosed\":\"Animations_cardSettingsClosed__2C6kt\",\"masterNodeExpandedEnter\":\"Animations_masterNodeExpandedEnter__1AD48\",\"masterNodeExpandedDone\":\"Animations_masterNodeExpandedDone__1Jpp_\",\"overlay\":\"Animations_overlay__27VQu\",\"enter\":\"Animations_enter__1xXGt\",\"enterDone\":\"Animations_enterDone__1zdFh\",\"exit\":\"Animations_exit__3iz6g\",\"exitActive\":\"Animations_exitActive__1NiFt\",\"exitDone\":\"Animations_exitDone__1bOW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteContent\":\"App_siteContent__1O-1Q\",\"pageRightWrapper\":\"App_pageRightWrapper__sAd62\",\"pageWrapper\":\"App_pageWrapper__3gEx6\",\"pageBasePlaceholder\":\"App_pageBasePlaceholder__1ru0J\",\"slideInAnimation\":\"App_slideInAnimation__1WqZf\",\"slideOutAnimation\":\"App_slideOutAnimation__1AsiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodeSettingsWrapper\":\"NodeSettings_nodeSettingsWrapper__3XU7r\",\"nodeSettingsHeader\":\"NodeSettings_nodeSettingsHeader__4sVJ7\",\"nodeSettingsTitle\":\"NodeSettings_nodeSettingsTitle__3-6ak\",\"nodeSettingsHeaderDetails\":\"NodeSettings_nodeSettingsHeaderDetails__2PPSn\",\"nodeSettingsContent\":\"NodeSettings_nodeSettingsContent__2N4hq\",\"loaderWrapper\":\"NodeSettings_loaderWrapper__1aG4C\",\"closeButton\":\"NodeSettings_closeButton__1Jlfo\",\"cardSettings\":\"NodeSettings_cardSettings__hqrM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"FocusedApp_pageWrapper__A5wkr\",\"currentAppThumbnail\":\"FocusedApp_currentAppThumbnail__2KwEL\",\"pinnAppIcon\":\"FocusedApp_pinnAppIcon__2yKZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallWrapper\":\"Thumbnail_smallWrapper__36W3w\",\"thumbnailText\":\"Thumbnail_thumbnailText__2XF_z\",\"normalWrapper\":\"Thumbnail_normalWrapper__TJGq-\",\"withDndStyles\":\"Thumbnail_withDndStyles__2w1lp\",\"textThumbnailLarge\":\"Thumbnail_textThumbnailLarge__3rvft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContentWrapper\":\"NodePage_pageContentWrapper__1cV1q\",\"nodeCardWrapper\":\"NodePage_nodeCardWrapper__Bt8sm\",\"cardWrapperSettingsLoaded\":\"NodePage_cardWrapperSettingsLoaded__1LprL\",\"pageHeaderWrapper\":\"NodePage_pageHeaderWrapper__fnfmG\",\"displayMasterNode\":\"NodePage_displayMasterNode__2uCn4\",\"nodeSettingsSpinner\":\"NodePage_nodeSettingsSpinner__2j_ia\",\"loading\":\"NodePage_loading__ZdSV4\",\"pageTitleCustomWrapper\":\"NodePage_pageTitleCustomWrapper__2PNix\",\"pageTitle\":\"NodePage_pageTitle__2gp6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pinnAppWrapper\":\"PinnApp_pinnAppWrapper__2dsgI\",\"pinnedIcon\":\"PinnApp_pinnedIcon__5lP3U\",\"pinned\":\"PinnApp_pinned__k0U11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dashboard_wrapper__3S0uy\",\"pageContentWrapper\":\"Dashboard_pageContentWrapper__1HKqG\",\"underConstruction\":\"Dashboard_underConstruction__hZ8IC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__1BGHY\",\"loading\":\"Loader_loading__21jB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideMenuWrapper\":\"SideMenu_sideMenuWrapper__2Sypt\",\"sideMenuTitle\":\"SideMenu_sideMenuTitle__3gLou\",\"sideMenuItem\":\"SideMenu_sideMenuItem__1uYWu\",\"sideMenuItemIcon\":\"SideMenu_sideMenuItemIcon__ZZbgL\",\"customHight\":\"SideMenu_customHight__3eyfk\",\"sideMenuIPinnedApps\":\"SideMenu_sideMenuIPinnedApps__WJHd2\",\"selected\":\"SideMenu_selected__3ix6Q\",\"generalSectionWrapper\":\"SideMenu_generalSectionWrapper__ceS9A\",\"pinnedSectionWrapper\":\"SideMenu_pinnedSectionWrapper__1uBva\",\"pinnedApp\":\"SideMenu_pinnedApp__3ZjOo\",\"removePinnedAppIcon\":\"SideMenu_removePinnedAppIcon__3W9fA\",\"pinnedAppText\":\"SideMenu_pinnedAppText__cBiy_\",\"pinnedAppTextSmallScreen\":\"SideMenu_pinnedAppTextSmallScreen__2ZTMu\",\"pinnedEmptyState\":\"SideMenu_pinnedEmptyState__36Zrx\",\"explanation\":\"SideMenu_explanation__1sW3x\",\"loggedInUserSectionWrapper\":\"SideMenu_loggedInUserSectionWrapper__1hOwM\",\"userName\":\"SideMenu_userName__3iQnu\",\"userNameCollapsed\":\"SideMenu_userNameCollapsed__1C5NW\",\"userThumbnail\":\"SideMenu_userThumbnail__1COiW\",\"minimizeSideMenuIcon\":\"SideMenu_minimizeSideMenuIcon__67CPD\",\"isMinimized\":\"SideMenu_isMinimized__3mAVD\",\"disabled\":\"SideMenu_disabled__39wvy\",\"faAngleLeft\":\"SideMenu_faAngleLeft__US-F9\",\"faSignOutAlt\":\"SideMenu_faSignOutAlt__2qFw_\",\"signoutButton\":\"SideMenu_signoutButton__2oclW\",\"footerSection\":\"SideMenu_footerSection__366tu\",\"minimizedView\":\"SideMenu_minimizedView__1BQeZ\",\"menuItemText\":\"SideMenu_menuItemText__11Z0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageTitleWrapper\":\"Applications_pageTitleWrapper__w9V9o\",\"mkAppModalWrapper\":\"Applications_mkAppModalWrapper__3ddUq\",\"appName\":\"Applications_appName__2g22o\",\"applicationTile\":\"Applications_applicationTile__2ffZ-\",\"notAvailable\":\"Applications_notAvailable__38yQi\",\"withDndStyles\":\"Applications_withDndStyles__FAXe3\",\"openAppInner\":\"Applications_openAppInner__35mej\",\"appIsLoading\":\"Applications_appIsLoading__3QBOe\",\"openApp\":\"Applications_openApp__18w23\",\"openAppText\":\"Applications_openAppText__3xwtM\",\"dndPlaceHolder\":\"Applications_dndPlaceHolder__2zGCm\",\"optionsMenu\":\"Applications_optionsMenu__3t7Fr\",\"optionsItem\":\"Applications_optionsItem__2mVrT\",\"optionsMenuDnd\":\"Applications_optionsMenuDnd__FXO1W\",\"pageContentWrapper\":\"Applications_pageContentWrapper__3Q44b\",\"apploader\":\"Applications_apploader__2CDDx\",\"applicationTileWrapper\":\"Applications_applicationTileWrapper__1PQ97\",\"thumbnailWrapper\":\"Applications_thumbnailWrapper__2tyPm\",\"notAvailablePlaceholder\":\"Applications_notAvailablePlaceholder__1bGo7\"};","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";"],"sourceRoot":""}