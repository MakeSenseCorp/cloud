{"version":3,"sources":["components/DashboardPages/ApplicationsPage/ApplicationTile/ApplicationTile.module.css","components/Header/Header.module.css","components/DashboardPages/NodesPage/NodePage.module.css","components/DashboardPages/NodesPage/NodeSettings/NodeSettings.module.css","components/Dashboard/Dashboard.module.css","components/DashboardPages/ApplicationsPage/ApplicationsPage.module.css","components/DashboardPages/PageHeader/PageHeader.module.css","components/DashboardPages/FavoritesPage/FavoritesPage.module.css","components/DashboardPages/NodesPage/NodeCardTransition/NodeCardTransition.module.css","assets/img/react_logo.svg","components/DashboardPages/NodesPage/NodeCardSummary/NodeCardSummary.module.css","components/SideMenu/SideMenu.module.css","components/Header/Header.tsx","components/IconWrappers/LogoutIcon.tsx","components/IconWrappers/FavoritesIcon.tsx","components/IconWrappers/ApplicationIcon.tsx","components/IconWrappers/SensorsIcon.tsx","components/IconWrappers/HelpIcon.tsx","components/IconWrappers/AccountIcon.tsx","components/IconWrappers/DashboardSettingsIcon.tsx","components/SideMenu/MenuSections/GeneralSection.tsx","components/SideMenu/MenuSections/SettingsSection.tsx","components/SideMenu/MenuSections/PinnedAppsSection.tsx","components/SideMenu/SideMenu.tsx","serverApiMocks.ts","services/DashboardServerApi/DashboardServerApi.ts","components/Providers/DashboardContext.tsx","components/Portal/Portal.tsx","components/DashboardPages/ApplicationsPage/ApplicationTile/ApplicationTile.tsx","components/AppLoader/AppLoader.tsx","components/DashboardPages/PageHeader/PageHeader.tsx","components/Skeleton/ApplicationTile.tsx","components/DashboardPages/ApplicationsPage/ApplicationsPage.tsx","components/DashboardPages/FavoritesPage/FavoritesPage.tsx","components/SkeletonShimmer/SkeletonShimmer.tsx","components/Text/Text.tsx","components/DashboardPages/NodesPage/NodeCardSummary/NodeCardTypography.tsx","components/DashboardPages/NodesPage/NodeCardSummary/NodeCardSummary.tsx","components/DashboardPages/NodesPage/NodeCardTransition/NodeCardTransition.tsx","components/DashboardPages/NodesPage/NodeCardWrapper/NodeCardWrapper.tsx","components/IconWrappers/CloseButton.tsx","components/DashboardPages/NodesPage/NodeSettings/NodeSettings.tsx","components/DashboardPages/NodesPage/NodePage.tsx","components/Dashboard/Dashboard.tsx","serviceWorker.js","index.tsx","components/App/App.tsx"],"names":["module","exports","applicationWrapper","smartHome","applicationTitle","applicationThumbnailWrapper","imageThumbnail","imageSize","textThumbnail","applicationContent","mkAppModalWrapper","contentHeader","sectionTitle","headerUserWrapper","headerUserThumbnail","headerUserName","headerOptions","headerTriangle","pageWrapper","pageContentWrapper","outerCardWrapper","cardWrapper","cardWrapperSelected","cardWrapperSettingsLoaded","pageHeaderWrapper","displayMasterNode","nodeSettingsSpinner","loading","nodeSettingsHeader","nodeSettingsHeaderDetails","nodeSettingsContent","loaderWrapper","closeButton","root","siteContent","myApplicationsHeader","mainWrapper","overlay","__webpack_require__","p","deviceTypeIcon","Section","IconSectionBackground","deviceContentWrapper","subTitle","text","deviceType","deviceName","deviceSettingsMenu","deviceSettingsMenuIcon","deviceStatus","cardSummary","nodeSettingPageWrapper","placeHolderWidth","nodeSettingPage","modalWrapper","sideMenuWrapper","sideMenuTitle","sideMenuItem","sideMenuItemIcon","sideMenuIPinnedApps","selected","Header","react_default","a","createElement","className","css","LogoutIcon","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","props","version","id","x","y","width","height","viewBox","enableBackground","d","React","FavoritesIcon","ApplicationIcon","color","SensorsIcon","HelpIcon","AccountIcon","DashboardSettingsIcon","GeneralSection","GeneralSection_SideMenuLink","assign","pageName","FavoritesIcon_FavoritesIcon","ApplicationIcon_ApplicationIcon","SensorsIcon_SensorsIcon","HelpIcon_HelpIcon","SideMenuLink","_ref","_classNames","pageSelector","selectedPage","children","onClick","classNames","defineProperty","SettingsSection","AccountIcon_AccountIcon","DashboardSettingsIcon_DashboardSettingsIcon","PinnedAppsSection","SideMenu","GeneralSection_GeneralSection","SettingsSection_SettingsSection","PinnedAppsSection_PinnedAppsSection","LogoutIcon_LogoutIcon","thumbnail","require","DashboardServerApi","_this","makeSenseApi","window","MkSAPIBuilder","GetInstance","getApplicationThumbnail","console","log","Promise","resolve","getNodeDetails","uuid","GetNodeInfo","response","_error","payload","data","getNodeSettings","all","getNodeHtmlSettings","getNodeScriptsSettings","then","nodeSettingsFiles","_nodeSettingsFiles","slicedToArray","html","scripts","getAppData","getAppHtml","getAppScripts","_data","GetFileContent","ui_type","file_name","file_type","content","getNodeList","reject","Webface","GetUserNodeList","nodes","error","ConnectGateway","Gateway","OnGatewayDataArrivedCallback","OnGatewayAdminCallback","DashboardContext","dashboardServerApi","ownState","Portal","_getPrototypeOf2","_len","length","args","Array","_key","call","concat","context","state","iframeRoot","createIframeContent","hexxStream","hexString","toString","parstedString","i","substr","String","fromCharCode","parseInt","current","htmlString","decodeDomProperty","script","iframeWrapper","ReactDOM","findDOMNode","contentDocument","open","write","close","title","style","display","frameBorder","ref","contextType","initialApplicationTileState","isMkAppOpen","ApplicationTile","renderThumbnail","_this$props","appThumbnail","name","src","charAt","toUpperCase","openMKAppMainView","asyncToGenerator","regenerator_default","mark","_callee","_ref2","_ref2$html","htmlStream","_ref2$scripts","scriptStream","wrap","_context","prev","next","sent","setState","stop","closeMKAppMainView","viewportSize","onDoubleClick","index_es","closeOnEsc","modal","onClose","Portal_Portal","innitialState","mkAppLoadedData","appProps","AppLoader","_componentDidMount","t0","render","objectSpread","mkAppInitData","PageHeader","ApplicationTileSkeleton","innitialApplicationsPageState","appList","ApplicationsPage","PageHeader_PageHeader","map","mkApp","index","AppLoader_AppLoader","loadedProps","ApplicationTile_ApplicationTile","ApplicationTile_ApplicationTileSkeleton","SkeletonShimmer","shimmerAnimations","keyframes","_templateObject","Shimmer","styled","div","_templateObject2","Text","fontSize","weight","skeletonColor","showSkeleton","commonStyle","lineHeight","fontFamily","fontWeight","skeletonStyles","backgroundColor","Subtitle","Text_Text","CardText","NodeCardSummary","isNodeSettingsLoaded","isNodeSettingsOpenned","handleNodeSettingsClick","onCardSettingsClickCallback","deviceTypeSection","NodeCardTypography_Subtitle","isLoading","NodeCardTypography_CardText","deviceSummaryData","type","deviceNameSection","_this$props$deviceSum","description","deviceIdSection","deviceConnectionSection","react_fontawesome_index_es","icon","faCodeBranch","size","faBars","SkeletonShimmer_SkeletonShimmer","isNodeSummaryOpen","isNodeSettingsloaded","NodeCardTransition","componentDomRef","onCardSettingsOpenCloseAnimation","prevStateNodeSummaryOpen","prevStateNodeSettingsloaded","onNodeSettingsloaded","getTranslationDistance","getBoundingClientRect","top","closeOnOverlayClick","_this$state","react_addons_css_transition_group_default","transitionEnterTimeout","transitionLeaveTimeout","transitionName","NodeCardWrapper","CloseButton","xmlns","isLoadingFiles","NodeSettings","nodeSettings","_this2","deviceUuid","onCardSettingsLoaded","nodeName","closeModal","CloseButton_CloseButton","showNodeList","nodeList","filteredMaster","isDisplayWithMasterNodes","NodesPage","nodeData","NodeCardTransition_NodeCardTransition","NodeCardWrapper_NodeCardWrapper","transform","NodeSettings_NodeSettings","NodeCardSummary_NodeCardSummary","innitialDashboardState","selectedDashboardPage","Dashboard","selectDashboardPage","Header_Header","SideMenu_SideMenu","ApplicationsPage_ApplicationsPage","NodePage_NodesPage","Boolean","location","hostname","match","BrowserRouter","Provider","Dashboard_Dashboard","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7aceb698.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"applicationWrapper\":\"ApplicationTile_applicationWrapper__2-0ap\",\"smartHome\":\"ApplicationTile_smartHome__3OkK_\",\"applicationTitle\":\"ApplicationTile_applicationTitle__3_zhZ\",\"applicationThumbnailWrapper\":\"ApplicationTile_applicationThumbnailWrapper__2sOdj\",\"imageThumbnail\":\"ApplicationTile_imageThumbnail__38Fl-\",\"imageSize\":\"ApplicationTile_imageSize__1GYEH\",\"textThumbnail\":\"ApplicationTile_textThumbnail__1dPSN\",\"applicationContent\":\"ApplicationTile_applicationContent__3yYXh\",\"mkAppModalWrapper\":\"ApplicationTile_mkAppModalWrapper__3KLlB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentHeader\":\"Header_contentHeader__3N5h4\",\"sectionTitle\":\"Header_sectionTitle__KNfZh\",\"headerUserWrapper\":\"Header_headerUserWrapper__EEUwI\",\"headerUserThumbnail\":\"Header_headerUserThumbnail__1X1VM\",\"headerUserName\":\"Header_headerUserName__3fcPO\",\"headerOptions\":\"Header_headerOptions__3MnI0\",\"headerTriangle\":\"Header_headerTriangle__1x48i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"NodePage_pageWrapper__1erD0\",\"pageContentWrapper\":\"NodePage_pageContentWrapper__1Dlip\",\"outerCardWrapper\":\"NodePage_outerCardWrapper__19PrM\",\"cardWrapper\":\"NodePage_cardWrapper__qTImy\",\"cardWrapperSelected\":\"NodePage_cardWrapperSelected__3V64C\",\"cardWrapperSettingsLoaded\":\"NodePage_cardWrapperSettingsLoaded__JNE9e\",\"pageHeaderWrapper\":\"NodePage_pageHeaderWrapper__1vmDm\",\"displayMasterNode\":\"NodePage_displayMasterNode__1nByh\",\"nodeSettingsSpinner\":\"NodePage_nodeSettingsSpinner__NP1mc\",\"loading\":\"NodePage_loading__vbu9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodeSettingsHeader\":\"NodeSettings_nodeSettingsHeader__1ZY5I\",\"nodeSettingsHeaderDetails\":\"NodeSettings_nodeSettingsHeaderDetails__3mHEN\",\"nodeSettingsContent\":\"NodeSettings_nodeSettingsContent__39EKR\",\"loaderWrapper\":\"NodeSettings_loaderWrapper__1zJov\",\"loading\":\"NodeSettings_loading__3gka5\",\"closeButton\":\"NodeSettings_closeButton__1YRBy\",\"nodeSettingsSpinner\":\"NodeSettings_nodeSettingsSpinner__3PlVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3RI4M\",\"siteContent\":\"Dashboard_siteContent__3rEqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"ApplicationsPage_pageWrapper__3b22D\",\"pageContentWrapper\":\"ApplicationsPage_pageContentWrapper__305FH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myApplicationsHeader\":\"PageHeader_myApplicationsHeader__3ke-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"FavoritesPage_mainWrapper__157Tr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"NodeCardTransition_overlay__yZIpl\"};","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deviceTypeIcon\":\"NodeCardSummary_deviceTypeIcon__3fmjP\",\"Section\":\"NodeCardSummary_Section__3OfcM\",\"IconSectionBackground\":\"NodeCardSummary_IconSectionBackground__2ec_B\",\"deviceContentWrapper\":\"NodeCardSummary_deviceContentWrapper__1XIqc\",\"subTitle\":\"NodeCardSummary_subTitle__3F_f4\",\"text\":\"NodeCardSummary_text__2TFG2\",\"deviceType\":\"NodeCardSummary_deviceType__3_NCe\",\"deviceName\":\"NodeCardSummary_deviceName__2xOod\",\"deviceSettingsMenu\":\"NodeCardSummary_deviceSettingsMenu__2dpGA\",\"deviceSettingsMenuIcon\":\"NodeCardSummary_deviceSettingsMenuIcon__2mJX6\",\"deviceStatus\":\"NodeCardSummary_deviceStatus__1IBB0\",\"cardSummary\":\"NodeCardSummary_cardSummary__3JCD4\",\"nodeSettingPageWrapper\":\"NodeCardSummary_nodeSettingPageWrapper__2hIbr\",\"placeHolderWidth\":\"NodeCardSummary_placeHolderWidth__22oEa\",\"nodeSettingPage\":\"NodeCardSummary_nodeSettingPage__1_sVZ\",\"modalWrapper\":\"NodeCardSummary_modalWrapper__19XGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideMenuWrapper\":\"SideMenu_sideMenuWrapper__2ogCS\",\"sideMenuTitle\":\"SideMenu_sideMenuTitle__meWi3\",\"sideMenuItem\":\"SideMenu_sideMenuItem__2ZvS_\",\"sideMenuItemIcon\":\"SideMenu_sideMenuItemIcon__3_djs\",\"sideMenuIPinnedApps\":\"SideMenu_sideMenuIPinnedApps__3ghfi\",\"selected\":\"SideMenu_selected__2n9c9\"};","import React from \"react\";\nimport css from \"./Header.module.css\";\n\nexport const Header = () => (\n  <header className={css.contentHeader}>\n    <h1 className={css.sectionTitle}>__MAKESENSE</h1>\n    <div className={css.headerUserWrapper}>\n      <div className={css.headerUserThumbnail} />\n      <div className={css.headerUserName}>Boris Kadaner</div>\n      <div className={css.headerOptions}>\n        <div className={css.headerTriangle} />\n      </div>\n    </div>\n  </header>\n);\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class LogoutIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M32,64c8.547,0,16.583-3.329,22.627-9.374c6.045-6.044,9.374-14.079,9.374-22.626s-3.329-16.582-9.374-22.626\n                  C48.583,3.329,40.547,0,32,0C23.452,0,15.417,3.329,9.373,9.374C3.328,15.418-0.001,23.453-0.001,32s3.329,16.582,9.374,22.626\n                  C15.417,60.671,23.452,64,32,64z M10.787,10.788C16.453,5.121,23.986,2,32,2c8.013,0,15.547,3.121,21.213,8.788\n                  C58.88,16.454,62.001,23.987,62.001,32s-3.121,15.546-8.788,21.212C47.547,58.879,40.013,62,32,62\n                  c-8.014,0-15.547-3.121-21.213-8.788C5.12,47.546,1.999,40.013,1.999,32S5.12,16.454,10.787,10.788z\"\n          />\n          <rect x=\"31\" y=\"17\" width=\"2\" height=\"22\" />\n          <rect x=\"31\" y=\"43\" width=\"2\" height=\"4\" />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class FavoritesIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M48,4c-7.357,0-13.639,4.146-16,9.929C29.639,8.146,23.357,4,16,4C5.985,4,0,12.644,0,21\n                  c0,8.589,5.326,17.755,15.83,27.242c7.738,6.989,15.59,11.577,15.668,11.623L32,60.156l0.502-0.291\n                  c0.079-0.046,7.93-4.634,15.668-11.623C58.674,38.755,64,29.589,64,21C64,12.644,58.015,4,48,4z M32,57.833\n                  C28.031,55.41,2,38.828,2,21C2,13.627,7.237,6,16,6c7.214,0,15,4.971,15,13h2c0-8.029,7.786-13,15-13c8.763,0,14,7.627,14,15\n                  C62,38.818,35.968,55.409,32,57.833z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class ApplicationIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n        color=\"#768093\"\n      >\n        <g>\n          <path d=\"M0,58h64V6H0V58z M2,56V16h60v40H2z M62,8v6H2V8H62z\" />\n          <rect x=\"6\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"14\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"22\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"6\" y=\"24\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"32\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"40\" width=\"27\" height=\"2\" />\n          <path d=\"M37,42h21V24H37V42z M39,26h17v14H39V26z\" />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class SensorsIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n        color=\"#768093\"\n      >\n        <g>\n          <path d=\"M0,58h64V6H0V58z M2,56V16h60v40H2z M62,8v6H2V8H62z\" />\n          <rect x=\"6\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"14\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"22\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"6\" y=\"24\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"32\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"40\" width=\"27\" height=\"2\" />\n          <path d=\"M37,42h21V24H37V42z M39,26h17v14H39V26z\" />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class HelpIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M53,27h-1v-5c0-0.17-0.229-17-20-17S12,21.83,12,22v5h-1C4.935,27,0,31.935,0,38s4.935,11,11,11h3V31v-4v-5\n                  c0-0.612,0.205-15,18-15c17.739,0,17.998,14.389,18,15v5v1v20v1v3.323l-13,5.2V54H27v6h9.192L52,53.677V49h1\n                  c6.065,0,11-4.935,11-11S59.065,27,53,27z M12,47h-1c-4.963,0-9-4.038-9-9s4.037-9,9-9h1v2V47z M29,58v-2h6v2H29z M53,47h-1V29h1\n                  c4.963,0,9,4.038,9,9S57.963,47,53,47z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class AccountIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path d=\"M59,63.236l5-10V2H54v4h-4v11h2V8h2v45.236L59,63.236z M56,4h6v48.764l-3,6l-3-6V4z\" />\n          <path\n            d=\"M46,7H32.531l-0.75-3H28V0H18v4h-3.781l-0.75,3H0v57h46V7z M15.781,6H20V2h6v4h4.219l1.5,6H14.281L15.781,6z M44,62H2V9\n                  h10.969l-1.25,5h22.562l-1.25-5H44V62z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class DashboardSettingsIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M53.144,20.271L59.414,14L50,4.586l-6.27,6.27L39,9.279V0H25v9.279l-4.73,1.576L14,4.586L4.586,14l6.27,6.271L9.279,25H0\n                  v14h9.279l1.577,4.729L4.586,50L14,59.414l6.27-6.27L25,54.721V64h14v-9.279l4.73-1.576l6.27,6.27L59.414,50l-6.27-6.271L54.721,39\n                  H64V25h-9.279L53.144,20.271z M62,37h-8.721l-2.423,7.271L56.586,50L50,56.586l-5.73-5.73L37,53.279V62H27v-8.721l-7.27-2.424\n                  L14,56.586L7.414,50l5.73-5.729L10.721,37H2V27h8.721l2.423-7.271L7.414,14L14,7.414l5.73,5.73L27,10.721V2h10v8.721l7.27,2.424\n                  L50,7.414L56.586,14l-5.73,5.729L53.279,27H62V37z\"\n          />\n          <path\n            d=\"M32,25c-3.86,0-7,3.141-7,7s3.14,7,7,7s7-3.141,7-7S35.86,25,32,25z M32,37c-2.757,0-5-2.243-5-5s2.243-5,5-5s5,2.243,5,5\n                  S34.757,37,32,37z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.css\";\nimport {\n  FavoritesIcon,\n  ApplicationIcon,\n  SensorsIcon,\n  HelpIcon\n} from \"../../IconWrappers\";\nimport {SideMenuPageSelectorProps} from \"../SideMenu\";\nimport classNames from \"classnames\";\nimport {DashboardPages} from \"../../../types/internal-types\";\n\nexport interface OwnProps extends SideMenuPageSelectorProps {}\n\ninterface SideMenuLink extends SideMenuPageSelectorProps {\n  pageName: DashboardPages;\n  children?: React.ReactNode;\n}\n\nexport class GeneralSection extends React.Component<OwnProps> {\n  render() {\n    return (\n      <section>\n        <div className={css.sideMenuTitle}>GENERAL</div>\n        <SideMenuLink {...this.props} pageName=\"FAVORITES_PAGE\">\n          <FavoritesIcon className={css.sideMenuItemIcon} />\n          Favorites\n        </SideMenuLink>\n        <SideMenuLink {...this.props} pageName=\"APPLICATION_PAGE\">\n          <ApplicationIcon className={css.sideMenuItemIcon} />\n          Applications\n        </SideMenuLink>\n        <SideMenuLink {...this.props} pageName=\"SENSORS_PAGE\">\n          <SensorsIcon className={css.sideMenuItemIcon} />\n          Devices\n        </SideMenuLink>\n        <SideMenuLink {...this.props} pageName=\"HELP_PAGE\">\n          <HelpIcon className={css.sideMenuItemIcon} />\n          Help\n        </SideMenuLink>\n      </section>\n    );\n  }\n}\n\nconst SideMenuLink = ({\n  pageSelector,\n  selectedPage,\n  children,\n  pageName\n}: SideMenuLink) => (\n  <a\n    onClick={() => pageSelector(pageName)}\n    className={classNames({\n      [css.sideMenuItem]: true,\n      [css.selected]: selectedPage === pageName\n    })}\n  >\n    {<>{children}</>}\n  </a>\n);\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.css\";\nimport {AccountIcon, DashboardSettingsIcon} from \"../../IconWrappers\";\nimport {SideMenuPageSelectorProps} from \"../SideMenu\";\n\nexport interface OwnProps extends SideMenuPageSelectorProps {}\n\nexport class SettingsSection extends React.Component<OwnProps> {\n  render() {\n    return (\n      <section>\n        <div className={css.sideMenuTitle}>SETTINGS</div>\n        <a className={css.sideMenuItem}>\n          <AccountIcon className={css.sideMenuItemIcon} />\n          Account\n        </a>\n        <a className={css.sideMenuItem}>\n          <DashboardSettingsIcon className={css.sideMenuItemIcon} />\n          Dashboard Settings\n        </a>\n      </section>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.css\";\nimport {SideMenuPageSelectorProps} from \"../SideMenu\";\n\nexport interface OwnProps extends SideMenuPageSelectorProps {}\n\nexport class PinnedAppsSection extends React.Component<OwnProps> {\n  render() {\n    return (\n      <section className={css.sideMenuIPinnedApps}>\n        <div className={css.sideMenuTitle}>PINNED APPS</div>\n      </section>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./SideMenu.module.css\";\nimport {LogoutIcon} from \"../IconWrappers/LogoutIcon\";\nimport {\n  GeneralSection,\n  PinnedAppsSection,\n  SettingsSection\n} from \"./MenuSections\";\nimport {DashboardPages} from \"../../types/internal-types\";\n\nexport interface OwnProps extends SideMenuPageSelectorProps {}\n\nexport interface SideMenuPageSelectorProps {\n  pageSelector: (selectedPage: DashboardPages) => void;\n  selectedPage: DashboardPages;\n}\n\nexport default class SideMenu extends React.Component<OwnProps> {\n  render() {\n    return (\n      <nav className={css.sideMenuWrapper}>\n        <div>\n          <GeneralSection {...this.props} />\n          <SettingsSection {...this.props} />\n          <PinnedAppsSection {...this.props} />\n        </div>\n        <div className={css.sideMenuItem}>\n          <LogoutIcon className={css.sideMenuItemIcon} />\n          Logout\n        </div>\n      </nav>\n    );\n  }\n}\n","const thumb = require(\"./assets/img/react_logo.svg\");\nexport const mockAppList = [\n  {\n    name: \"Smart Home\",\n    id: \"2323-234234-1234\",\n    viewportSize: {\n      width: 800,\n      height: 800\n    }\n  }\n];\n\nexport const mockDeviceList = [\n  {\n    enabled: 1,\n    id: 6,\n    type: 999,\n    lastUpdateTs: 1532473013,\n    uuid: \"ac6de837-7863-72a9-c789-a0aae7e9d010\"\n  }\n];\nexport const thumbnail = thumb;\n","import {mockAppList, thumbnail} from \"../../serverApiMocks\";\n\nimport {\n  NodeList,\n  MkAppDescription,\n  GetUserNodeListDTO,\n  UUID,\n  OnGetNodeInfoCallbackDTO,\n  NoteDetails,\n  NodeSettingsDTO,\n  NodeSettings\n} from \"../../types/internal-types\";\n\nexport class DashboardServerApi {\n  makeSenseApi = window.MkSAPIBuilder.GetInstance();\n\n  constructor() {\n    this.makeSenseApi.ConnectGateway(() =>\n      console.log(\"Dashboard connected to gateway\")\n    );\n    this.makeSenseApi.Gateway.OnGatewayDataArrivedCallback = (data: any) => {};\n    this.makeSenseApi.Gateway.OnGatewayAdminCallback = (data: any) => {\n      console.log(\"OnGatewayAdminCallback\", data);\n    };\n  }\n\n  getApplicationThumbnail = () => {\n    console.log(\"/applications/:appId:/thumbnail\");\n    return Promise.resolve(thumbnail);\n  };\n\n  getNodeDetails = (uuid: UUID) => {\n    const nodeInfoPromise = new Promise<NoteDetails>((resolve) => {\n      this.makeSenseApi.GetNodeInfo(\n        uuid,\n        (response: OnGetNodeInfoCallbackDTO, _error: any) => {\n          const payload = response && response.data && response.data.payload;\n          resolve(payload);\n        }\n      );\n    });\n    return nodeInfoPromise;\n  };\n\n  getNodeSettings = (uuid: UUID): Promise<NodeSettings> => {\n    return Promise.all([\n      this.getNodeHtmlSettings(uuid),\n      this.getNodeScriptsSettings(uuid)\n    ]).then((nodeSettingsFiles) => {\n      const [html, scripts] = nodeSettingsFiles;\n      return {html: [html], scripts: [scripts], css: []} as any;\n    });\n  };\n\n  getAppData = (uuid: UUID): Promise<any> => {\n    return Promise.all([this.getAppHtml(uuid), this.getAppScripts(uuid)]).then(\n      (data) => {\n        const [html, scripts] = data;\n        return {html: [html], scripts: [scripts], css: []} as any;\n      }\n    );\n  };\n\n  private getNodeScriptsSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"js\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getAppHtml = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"app\",\n          file_name: \"\",\n          file_type: \"html\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getAppScripts = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"app\",\n          file_name: \"\",\n          file_type: \"js\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getNodeHtmlSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"html\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  getNodeList = () => {\n    const deviceListDataPromise = new Promise<NodeList[]>((resolve, reject) => {\n      this.makeSenseApi.Webface.GetUserNodeList(\n        (response: GetUserNodeListDTO) => {\n          resolve(response.nodes.data);\n          if (response && response.error) {\n            reject(\"OnGatewayDataArrivedCallback received an error\");\n          }\n        }\n      );\n    });\n    return deviceListDataPromise;\n  };\n}\n","import * as React from \"react\";\nimport {DashboardServerApi} from \"../../services/DashboardServerApi\";\n\nexport interface DashboardContext {\n  dashboardServerApi: DashboardServerApi;\n}\n\nexport const DashboardContext = React.createContext<DashboardContext>({\n  dashboardServerApi: new DashboardServerApi()\n});\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DashboardContext} from \"../Providers\";\n\ninterface OwnProps {\n  html: string;\n  scripts: string;\n}\nconst ownState = {};\n\nexport class Portal extends React.Component<OwnProps, typeof ownState> {\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n  readonly state = ownState;\n  private iframeRoot = React.createRef<HTMLIFrameElement>();\n\n  componentDidMount() {\n    this.createIframeContent();\n  }\n\n  decodeDomProperty(hexxStream: string) {\n    const hexString = hexxStream.toString(); //force conversion\n    let parstedString = \"\";\n    for (\n      let i = 0;\n      i < hexString.length && hexString.substr(i, 2) !== \"00\";\n      i += 2\n    )\n      parstedString += String.fromCharCode(\n        parseInt(hexString.substr(i, 2), 16)\n      );\n    return parstedString;\n  }\n\n  createIframeContent() {\n    if (this.iframeRoot.current) {\n      const htmlString = this.decodeDomProperty(this.props.html);\n      const script = this.decodeDomProperty(this.props.scripts);\n      const iframeWrapper: any = ReactDOM.findDOMNode(this.iframeRoot.current);\n\n      if (iframeWrapper && iframeWrapper.contentDocument) {\n        iframeWrapper.contentDocument.open();\n        iframeWrapper.contentDocument.write(htmlString);\n        iframeWrapper.contentDocument.write(`<script>${script}</script>`);\n        iframeWrapper.contentDocument.close();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <iframe\n          title=\"mk-portal\"\n          style={{display: \"block\", width: \"100%\", height: \"100%\"}}\n          frameBorder=\"0\"\n          ref={this.iframeRoot}\n        />\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./ApplicationTile.module.css\";\nimport Modal from \"react-responsive-modal\";\nimport {DashboardContext} from \"../../../Providers\";\nimport {Portal} from \"../../../Portal\";\nimport {UUID} from \"../../../../types/internal-types\";\n\nexport interface ApplicationTileProps {\n  uuid: UUID;\n  name: string;\n  appThumbnail: string;\n  viewportSize: {\n    width: number;\n    height: number;\n  };\n}\n\nconst initialApplicationTileState = {\n  isMkAppOpen: false,\n  html: \"\",\n  scripts: \"\"\n};\n\nexport class ApplicationTile extends React.Component<\n  ApplicationTileProps,\n  typeof initialApplicationTileState\n> {\n  readonly state = initialApplicationTileState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  renderThumbnail = () => {\n    const {appThumbnail, name} = this.props;\n    return (\n      <div className={css.applicationThumbnailWrapper}>\n        {appThumbnail ? (\n          <div className={css.imageThumbnail}>\n            <img src={appThumbnail} className={css.imageSize} />\n          </div>\n        ) : (\n          <div className={css.textThumbnail}>\n            {name ? name.charAt(0).toUpperCase() : \"TH\"}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  openMKAppMainView = async () => {\n    const {\n      html: [htmlStream],\n      scripts: [scriptStream]\n    } = await this.context.dashboardServerApi.getAppData(this.props.uuid);\n    this.setState({isMkAppOpen: true, html: htmlStream, scripts: scriptStream});\n  };\n\n  closeMKAppMainView = () => {\n    this.setState({isMkAppOpen: false});\n  };\n\n  render() {\n    const {viewportSize} = this.props;\n    const {isMkAppOpen} = this.state;\n\n    return (\n      <div\n        onDoubleClick={this.openMKAppMainView}\n        className={`\n          ${css.applicationWrapper} \n          ${css.smartHome}`}\n      >\n        <div className={css.applicationTitle}>\n          {this.renderThumbnail()}\n          {this.props.name}\n        </div>\n        <div className={css.applicationContent}>\n          {isMkAppOpen ? (\n            <Modal\n              closeOnEsc\n              classNames={{modal: css.mkAppModalWrapper}}\n              onClose={this.closeMKAppMainView}\n              open={this.state.isMkAppOpen}\n            >\n              <Portal html={this.state.html} scripts={this.state.scripts} />\n            </Modal>\n          ) : (\n            <div>put knobs here</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import {MkAppDescription} from \"../../types/internal-types\";\nimport * as React from \"react\";\nimport {ApplicationTileProps} from \"../DashboardPages/ApplicationsPage/ApplicationTile\";\nimport {DashboardContext} from \"../Providers\";\n\ninterface AppLoaderProps {\n  mkAppInitData: MkAppDescription;\n  render: (loadedMkAppProps: ApplicationTileProps) => React.ReactNode;\n}\n\nconst innitialState = {\n  appThumbnail: null as any,\n  mkAppLoadedData: {} as any,\n  appProps: {} as any\n};\n\nexport class AppLoader extends React.Component<\n  AppLoaderProps,\n  typeof innitialState\n> {\n  readonly state = innitialState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    //there shouls be cacsh managment here, so that Apploader wont fetch app list every time\n    try {\n      const appThumbnail = await this.context.dashboardServerApi.getApplicationThumbnail();\n      this.setState({appThumbnail});\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.render({\n          appThumbnail: this.state.appThumbnail,\n          ...this.props.mkAppInitData\n        })}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport css from \"./PageHeader.module.css\";\n\nexport interface OwnProps {\n  children: JSX.Element[] | JSX.Element | string;\n}\nexport const PageHeader = ({children}: OwnProps) => (\n  <header className={css.myApplicationsHeader}>{children}</header>\n);\n","import * as React from \"react\";\nexport const ApplicationTileSkeleton = () => (\n    <div>\n        SKELETON\n    </div>\n);","import {ApplicationTile} from \"./ApplicationTile\";\nimport {AppLoader} from \"../../AppLoader/AppLoader\";\nimport {MkAppDescription} from \"../../../types/internal-types\";\nimport {PageHeader} from \"../PageHeader\";\nimport * as React from \"react\";\nimport css from \"./ApplicationsPage.module.css\";\nimport {ApplicationTileSkeleton} from \"../../Skeleton\";\nimport {DashboardContext} from \"../../Providers\";\n\nconst innitialApplicationsPageState = {appList: [] as any};\n\nexport class ApplicationsPage extends React.Component<\n  {},\n  typeof innitialApplicationsPageState\n> {\n  readonly state = innitialApplicationsPageState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  public async componentDidMount() {\n    const appList = await this.context.dashboardServerApi.getNodeList();\n    this.setState({appList});\n  }\n\n  render() {\n    const {appList} = this.state;\n    return (\n      <section className={css.pageWrapper}>\n        <PageHeader>MY APPLICATIONS</PageHeader>\n        <div className={css.pageContentWrapper}>\n          {appList &&\n            appList.map((mkApp: MkAppDescription, index: any) => (\n              <AppLoader\n                key={index}\n                mkAppInitData={mkApp}\n                render={(loadedProps) => {\n                  return loadedProps ? (\n                    <ApplicationTile {...loadedProps} />\n                  ) : (\n                    <ApplicationTileSkeleton />\n                  );\n                }}\n              />\n            ))}\n        </div>\n      </section>\n    );\n  }\n}\n","import {PageHeader} from \"../PageHeader\";\nimport * as React from \"react\";\nimport css from \"./FavoritesPage.module.css\";\n\nexport class FavoritesPage extends React.Component {\n  render() {\n    return (\n      <section className={css.mainWrapper}>\n        <PageHeader>Favorites</PageHeader>\n        <div>THis is fav page AAAAAA!!!</div>\n      </section>\n    );\n  }\n}\n","import * as React from \"react\";\nimport styled, {keyframes} from \"styled-components\";\n\nexport const SkeletonShimmer: React.SFC<{width: string; color: string}> = ({\n  width,\n  color\n}) => {\n  const shimmerAnimations = keyframes`\n    0% {\n      background-position: 0 0;\n    }\n  \n    100% {\n      background-position: ${width} 0;\n    }\n  `;\n\n  const Shimmer = styled.div`\n    background-image: linear-gradient(\n      to right,\n      ${color} 0,\n      rgba(249, 250, 251, 0.8) 10%,\n      ${color} 20%\n    );\n    width: 100%;\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: 800px 104px;\n    display: inline-block;\n    position: absolute;\n    animation-duration: 1s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n    animation-name: ${shimmerAnimations};\n    animation-timing-function: linear;\n  `;\n\n  return <Shimmer />;\n};\n","import * as React from \"react\";\nimport css from \"./Text.module.css\";\n\ntype Weight = \"thin\" | \"normal\" | \"bold\";\n\nexport interface TextProps {\n  fontSize: string;\n  color: string;\n  skeletonColor: string;\n  weight: Weight;\n  width: string;\n  showSkeleton?: boolean;\n  children?: JSX.Element | string | number;\n}\n\nexport const Text: React.SFC<TextProps> = ({\n  fontSize,\n  color,\n  weight,\n  width,\n  skeletonColor,\n  showSkeleton,\n  children\n}) => {\n  const fontWeight = (weight: Weight) => {\n    switch (weight) {\n      case \"thin\":\n        return {\n          fontFamily: '\"Open Sans Light\", sans-serif',\n          weight\n        };\n      case \"normal\":\n        return {\n          fontFamily: '\"Open Sans Normal\", sans-serif',\n          weight\n        };\n      case \"bold\":\n        return {\n          fontFamily: '\"Open Sans Bold\", sans-serif',\n          weight\n        };\n    }\n  };\n\n  const commonStyle = {\n    fontSize,\n    color,\n    display: \"inline-block\",\n    height: fontSize,\n    lineHeight: fontSize,\n    ...fontWeight(weight)\n  };\n\n  const styles = {};\n\n  const skeletonStyles = {\n    backgroundColor: skeletonColor,\n    content: \"\",\n    width\n  };\n\n  return (\n    <>\n      {showSkeleton ? (\n        <div style={{...commonStyle, ...skeletonStyles}} />\n      ) : (\n        <div style={{...commonStyle, ...styles}}>{children}</div>\n      )}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport {Text} from \"../../../Text\";\n\nexport interface OwnProps {\n  showSkeleton: boolean;\n  children?: string[] | string | number;\n}\n\nexport const Subtitle: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    fontSize=\"10px\"\n    color=\"#768093\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"bold\"\n    width=\"70px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n\nexport const CardText: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    color=\"#2f3148\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"normal\"\n    fontSize=\"14px\"\n    width=\"100px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n","import * as React from \"react\";\nimport css from \"./NodeCardSummary.module.css\";\nimport {NoteDetails} from \"../../../../types/internal-types\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faCodeBranch} from \"@fortawesome/free-solid-svg-icons\";\nimport {DashboardContext} from \"../../../Providers\";\nimport {SkeletonShimmer} from \"../../../SkeletonShimmer\";\nimport {Subtitle, CardText} from \"./NodeCardTypography\";\n\nexport interface OwnProps {\n  isLoading: boolean;\n  deviceSummaryData: NoteDetails;\n  onCardSettingsClickCallback?: () => void;\n}\n\ninterface OwnState {\n  isNodeSettingsLoaded: boolean;\n}\n\nexport class NodeCardSummary extends React.Component<OwnProps, OwnState> {\n  static contextType = DashboardContext;\n  readonly state = {\n    isNodeSettingsLoaded: true,\n    isNodeSettingsOpenned: false\n  };\n  context!: React.ContextType<typeof DashboardContext>;\n\n  handleNodeSettingsClick = () => {\n    this.props.onCardSettingsClickCallback &&\n      this.props.onCardSettingsClickCallback();\n  };\n\n  deviceTypeSection = () => (\n    <div\n      className={`${css.Section} ${css.deviceContentWrapper} ${css.deviceType}`}\n    >\n      <div className={css.subTitle}>\n        <Subtitle showSkeleton={this.props.isLoading}>DEVICE TYPE</Subtitle>\n      </div>\n      <CardText showSkeleton={this.props.isLoading}>\n        {this.props.deviceSummaryData.type}\n      </CardText>\n    </div>\n  );\n\n  deviceNameSection = () => {\n    const {\n      deviceSummaryData: {description, name}\n    } = this.props;\n    const {isLoading} = this.props;\n    return (\n      <div\n        className={`${css.Section} ${css.deviceContentWrapper} ${\n          css.deviceName\n        }`}\n      >\n        <div className={css.subTitle}>\n          <Subtitle showSkeleton={isLoading}>DEVICE NAME</Subtitle>\n        </div>\n        <div className={css.text}>\n          <CardText showSkeleton={isLoading}>\n            {name} - {description}\n          </CardText>\n        </div>\n      </div>\n    );\n  };\n\n  deviceIdSection = () => {\n    return (\n      <div\n        className={`${css.Section} ${css.deviceContentWrapper} ${\n          css.deviceName\n        }`}\n      >\n        <div className={css.subTitle}>\n          <Subtitle showSkeleton={this.props.isLoading}>DEVICE ID</Subtitle>\n        </div>\n        <div className={css.text}>\n          <CardText showSkeleton={this.props.isLoading}>\n            {this.props.deviceSummaryData.uuid}\n          </CardText>\n        </div>\n      </div>\n    );\n  };\n\n  deviceConnectionSection = () => {\n    return (\n      <div\n        className={`${css.Section} ${css.deviceContentWrapper} ${\n          css.deviceStatus\n        }`}\n      >\n        <div className={css.subTitle}>\n          <Subtitle showSkeleton={this.props.isLoading}>STATUS</Subtitle>\n        </div>\n        <div className={css.text}>\n          <CardText showSkeleton={this.props.isLoading}>Connected</CardText>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const {isLoading} = this.props;\n    return (\n      <>\n        <div className={css.cardSummary}>\n          <div className={`${css.Section} ${css.IconSectionBackground}`}>\n            <FontAwesomeIcon icon={faCodeBranch} size=\"2x\" color=\"#768093\" />\n          </div>\n          {this.deviceTypeSection()}\n          {this.deviceNameSection()}\n          {this.deviceIdSection()}\n          {this.deviceConnectionSection()}\n          <div\n            className={`${css.deviceContentWrapper} ${css.deviceSettingsMenu}`}\n          >\n            <span\n              className={css.deviceSettingsMenuIcon}\n              onClick={this.handleNodeSettingsClick}\n            >\n              <FontAwesomeIcon icon={faBars} size=\"2x\" color=\"#768093\" />\n            </span>\n          </div>\n          {isLoading && (\n            <SkeletonShimmer\n              width=\"1400px\"\n              color=\"rgba(249, 250, 251, 0.001)\"\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {DashboardContext} from \"../../../Providers\";\nimport css from \"./NodeCardTransition.module.css\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport ReactDOM from \"react-dom\";\n\ninterface OwnProps {\n  children: ({\n    onCardSettingsOpenCloseAnimation,\n    isNodeSummaryOpen,\n    isNodeSettingsloaded,\n    getTranslationDistance,\n    onNodeSettingsloaded\n  }: {\n    onNodeSettingsloaded: () => void;\n    isNodeSummaryOpen: boolean;\n    isNodeSettingsloaded: boolean;\n    getTranslationDistance: (index: number) => number;\n    onCardSettingsOpenCloseAnimation: () => void;\n  }) => React.ReactNode;\n}\n\nconst ownState = {\n  isNodeSummaryOpen: false,\n  isNodeSettingsloaded: false\n};\n\nexport class NodeCardTransition extends React.Component<\n  OwnProps,\n  typeof ownState\n> {\n  readonly state = ownState;\n\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n  componentDomRef: any = null;\n\n  componentDidMount() {\n    this.componentDomRef = ReactDOM.findDOMNode(this);\n  }\n\n  onCardSettingsOpenCloseAnimation = () => {\n    const prevStateNodeSummaryOpen = this.state.isNodeSummaryOpen;\n    const prevStateNodeSettingsloaded = this.state.isNodeSettingsloaded;\n    this.setState({\n      isNodeSummaryOpen: !prevStateNodeSummaryOpen,\n      isNodeSettingsloaded: !prevStateNodeSettingsloaded\n    });\n  };\n\n  onNodeSettingsloaded = () => {\n    this.setState({isNodeSettingsloaded: true});\n  };\n\n  getTranslationDistance = (index: number) => {\n    return this.componentDomRef.getBoundingClientRect().top - 155; //todo: magic number please refactor\n  };\n\n  closeOnOverlayClick = () => {\n    this.setState({isNodeSummaryOpen: false});\n  };\n\n  render() {\n    const {isNodeSummaryOpen, isNodeSettingsloaded} = this.state;\n    return (\n      <>\n        {isNodeSummaryOpen && (\n          <ReactCSSTransitionGroup\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={300}\n            transitionName=\"overlay\"\n          >\n            <div onClick={this.closeOnOverlayClick} className={css.overlay} />\n          </ReactCSSTransitionGroup>\n        )}\n        {this.props.children({\n          onCardSettingsOpenCloseAnimation: this\n            .onCardSettingsOpenCloseAnimation,\n          onNodeSettingsloaded: this.onNodeSettingsloaded,\n          isNodeSummaryOpen,\n          isNodeSettingsloaded,\n          getTranslationDistance: this.getTranslationDistance\n        })}\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {DashboardContext} from \"../../../Providers\";\nimport {UUID, NoteDetails} from \"../../../../types/internal-types\";\n\ninterface OwnProps {\n  uuid: UUID;\n  children: ({\n    isLoading,\n    deviceSummaryData\n  }: {\n    isLoading: boolean;\n    deviceSummaryData: NoteDetails | null;\n  }) => React.ReactNode;\n}\n\nconst ownState = {\n  isLoading: true,\n  deviceSummaryData: {} as NoteDetails | null\n};\n\nexport class NodeCardWrapper extends React.Component<\n  OwnProps,\n  typeof ownState\n> {\n  readonly state = ownState;\n\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    const deviceSummaryData = await this.context.dashboardServerApi.getNodeDetails(\n      this.props.uuid\n    );\n    this.setState({deviceSummaryData, isLoading: false});\n  }\n\n  render() {\n    const {deviceSummaryData, isLoading} = this.state;\n    return (\n      <>\n        {this.props.children({\n          deviceSummaryData,\n          isLoading\n        })}\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class CloseButton extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"28\"\n        height=\"28\"\n        viewBox=\"0 0 36 36\"\n        className={this.props.className}\n      >\n        <path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {DashboardContext} from \"../../../Providers\";\nimport css from \"./NodeSettings.module.css\";\nimport {UUID} from \"../../../../types/internal-types\";\nimport {Portal} from \"../../../Portal\";\nimport {CloseButton} from \"../../../IconWrappers/CloseButton\";\n\ninterface OwnProps {\n  deviceUuid: UUID;\n  nodeName: string;\n  closeModal: () => void;\n  onCardSettingsLoaded?: () => void;\n}\n\nconst ownState = {\n  html: [\"\"],\n  scripts: [\"\"],\n  isLoadingFiles: true\n};\n\nexport class NodeSettings extends React.Component<OwnProps, typeof ownState> {\n  readonly state = ownState;\n\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    const nodeSettings = await this.context.dashboardServerApi.getNodeSettings(\n      this.props.deviceUuid\n    );\n    this.setState({...nodeSettings, isLoadingFiles: false}, () => {\n      this.props.onCardSettingsLoaded && this.props.onCardSettingsLoaded();\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div key=\"node-settings\" className={css.nodeSettingsHeader}>\n          <div>\n            NODE SETTINGS\n            <span className={css.nodeSettingsHeaderDetails}>\n              {this.props.nodeName}\n            </span>\n          </div>\n          <div onClick={this.props.closeModal}>\n            <CloseButton className={css.closeButton} />\n          </div>\n        </div>\n        <div className={css.nodeSettingsContent}>\n          {this.state.isLoadingFiles ? (\n            <div className={css.loading}>\n              <div className={css.nodeSettingsSpinner} /> <div> Loading...</div>\n            </div>\n          ) : (\n            <Portal scripts={this.state.scripts[0]} html={this.state.html[0]} />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import {PageHeader} from \"../PageHeader\";\nimport * as React from \"react\";\nimport css from \"./NodePage.module.css\";\nimport {NodeCardSummary} from \"./NodeCardSummary\";\nimport {DashboardContext} from \"../../Providers\";\nimport {NodeList} from \"../../../types/internal-types\";\nimport {NodeCardTransition} from \"./NodeCardTransition/NodeCardTransition\";\nimport classNames from \"classnames\";\nimport {NodeCardWrapper} from \"./NodeCardWrapper/NodeCardWrapper\";\nimport {NodeSettings} from \"./NodeSettings/NodeSettings\";\n\nexport interface OwnProps {}\n\nconst innitialState = {\n  showNodeList: false,\n  nodeList: [] as NodeList[],\n  filteredMaster: [] as NodeList[],\n  isDisplayWithMasterNodes: true\n};\n\nexport class NodesPage extends React.Component<OwnProps, typeof innitialState> {\n  readonly state = innitialState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    const data: NodeList[] = await this.context.dashboardServerApi.getNodeList();\n    this.setState({nodeList: data});\n  }\n\n  render() {\n    const {nodeList} = this.state;\n\n    return (\n      <>\n        <section className={css.pageWrapper}>\n          <PageHeader>\n            <div className={css.pageHeaderWrapper}>MY DEVICES</div>\n          </PageHeader>\n          <div className={css.pageContentWrapper}>\n            {nodeList.map((nodeData, index) => (\n              <NodeCardTransition key={index}>\n                {({\n                  onCardSettingsOpenCloseAnimation,\n                  isNodeSummaryOpen,\n                  onNodeSettingsloaded,\n                  getTranslationDistance,\n                  isNodeSettingsloaded\n                }) => {\n                  return (\n                    <NodeCardWrapper uuid={nodeData.uuid}>\n                      {({isLoading, deviceSummaryData}) => {\n                        return (\n                          <>\n                            {deviceSummaryData && (\n                              <div className={css.outerCardWrapper}>\n                                <section\n                                  style={\n                                    isNodeSummaryOpen\n                                      ? {\n                                          transform: `translateY(-${getTranslationDistance(\n                                            index\n                                          )}px`\n                                        }\n                                      : {}\n                                  }\n                                  className={classNames({\n                                    [css.cardWrapper]: true,\n                                    [css.cardWrapperSelected]: isNodeSummaryOpen,\n                                    [css.cardWrapperSettingsLoaded]: isNodeSettingsloaded\n                                  })}\n                                >\n                                  <>\n                                    {isNodeSummaryOpen ? (\n                                      <NodeSettings\n                                        nodeName={`${\n                                          deviceSummaryData.name\n                                        } - ${deviceSummaryData.description}`}\n                                        deviceUuid={deviceSummaryData.uuid}\n                                        onCardSettingsLoaded={\n                                          onNodeSettingsloaded\n                                        }\n                                        closeModal={\n                                          onCardSettingsOpenCloseAnimation\n                                        }\n                                      />\n                                    ) : (\n                                      <NodeCardSummary\n                                        key={index}\n                                        deviceSummaryData={deviceSummaryData}\n                                        isLoading={isLoading}\n                                        onCardSettingsClickCallback={\n                                          onCardSettingsOpenCloseAnimation\n                                        }\n                                      />\n                                    )}\n                                  </>\n                                </section>\n                              </div>\n                            )}\n                          </>\n                        );\n                      }}\n                    </NodeCardWrapper>\n                  );\n                }}\n              </NodeCardTransition>\n            ))}\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./Dashboard.module.css\";\nimport {Header} from \"../Header/Header\";\nimport SideMenu from \"../SideMenu/SideMenu\";\nimport {ApplicationsPage, NodesPage} from \"../DashboardPages\";\nimport {DashboardPages} from \"../../types/internal-types\";\n\nexport interface DashboardProps {}\n\nconst innitialDashboardState: DashboardState = {\n  selectedDashboardPage: \"APPLICATION_PAGE\"\n};\n\ninterface DashboardState {\n  selectedDashboardPage: DashboardPages;\n}\n\nexport class Dashboard extends React.Component<DashboardProps, DashboardState> {\n  readonly state = innitialDashboardState;\n\n  selectDashboardPage = (selectedPage: DashboardPages) => {\n    this.setState({selectedDashboardPage: selectedPage});\n  };\n\n  render() {\n    const {selectedDashboardPage} = this.state;\n    return (\n      <div className={css.root}>\n        <Header />\n        <main className={css.siteContent}>\n          <SideMenu\n            pageSelector={this.selectDashboardPage}\n            selectedPage={selectedDashboardPage}\n          />\n          {selectedDashboardPage === \"APPLICATION_PAGE\" && <ApplicationsPage />}\n          {selectedDashboardPage === \"SENSORS_PAGE\" && <NodesPage />}\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from \"react\";\nimport {Dashboard} from \"../Dashboard\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {DashboardContext} from \"../Providers\";\nimport {DashboardServerApi} from \"../../services/DashboardServerApi\";\nimport \"./fonts.module.css\";\nimport \"./global.module.css\";\n\nexport const App = () => (\n  <BrowserRouter>\n    <DashboardContext.Provider\n      value={{dashboardServerApi: new DashboardServerApi()}}\n    >\n      <Dashboard />\n    </DashboardContext.Provider>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}